<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mapas | Adriano M R Figueiredo</title>
    <link>/tags/mapas/</link>
      <atom:link href="/tags/mapas/index.xml" rel="self" type="application/rss+xml" />
    <description>mapas</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>This work is licensed under the Creative Commons Attribution-ShareAlike 4.0 International License: CC BY-SA 4.0. 2019 Adriano M. R. Figueiredo</copyright><lastBuildDate>Fri, 22 May 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/icon-32.png</url>
      <title>mapas</title>
      <link>/tags/mapas/</link>
    </image>
    
    <item>
      <title>Economia Regional: Mapas de coeficiente de especialização em R</title>
      <link>/post/regional_economics_cemaps/</link>
      <pubDate>Fri, 22 May 2020 00:00:00 +0000</pubDate>
      <guid>/post/regional_economics_cemaps/</guid>
      <description>


&lt;div id=&#34;Licença&#34; class=&#34;section level1 unnumbered&#34;&gt;
&lt;h1&gt;Licença&lt;/h1&gt;
&lt;p&gt;This work is licensed under the Creative Commons Attribution-ShareAlike 4.0 International License. To view a copy of this license, visit &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34; class=&#34;uri&#34;&gt;http://creativecommons.org/licenses/by-sa/4.0/&lt;/a&gt; or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://mirrors.creativecommons.org/presskit/buttons/88x31/png/by-sa.png&#34; style=&#34;width:25.0%&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;License: CC BY-SA 4.0&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;Citação&#34; class=&#34;section level1 unnumbered&#34;&gt;
&lt;h1&gt;Citação&lt;/h1&gt;
&lt;p&gt;Sugestão de citação:
FIGUEIREDO, Adriano Marcos Rodrigues. Economia Regional: Mapas de Coeficiente de Especialização em R. Campo Grande-MS,Brasil: RStudio/Rpubs, 2020. Disponível em &lt;a href=&#34;http://rpubs.com/amrofi/Regional_Economics_CEmaps&#34; class=&#34;uri&#34;&gt;http://rpubs.com/amrofi/Regional_Economics_CEmaps&lt;/a&gt; e &lt;a href=&#34;https://adrianofigueiredo.netlify.app/post/regional_economics_cemaps/&#34; class=&#34;uri&#34;&gt;https://adrianofigueiredo.netlify.app/post/regional_economics_cemaps/&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;script-para-reprodução-se-utilizar-citar-como-acima&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Script para reprodução (se utilizar, citar como acima)&lt;/h1&gt;
&lt;a href=&#34;data:text/x-markdown;base64,&#34; download=&#34;2020-05-22-Regional_Economics_CEmaps.Rmd&#34;&gt;Download 2020-05-22-Regional_Economics_CEmaps.Rmd&lt;/a&gt;
&lt;/div&gt;
&lt;div id=&#34;introdução&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introdução&lt;/h1&gt;
&lt;p&gt;Para realizar seu mapa em R, inicialmente o leitor deve baixar os programas e pacotes necessários ao projeto. Neste caso, sugere-se que utilize o RStudio e o R atualizados, a partir de: &lt;a href=&#34;http://cran.r-project.org/bin/windows/base/&#34; class=&#34;uri&#34;&gt;http://cran.r-project.org/bin/windows/base/&lt;/a&gt; e &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download3/&#34; class=&#34;uri&#34;&gt;https://www.rstudio.com/products/rstudio/download3/&lt;/a&gt;. Quando esta revisão foi feita, a versão do RStudio era a &lt;em&gt;RStudio Desktop 1.2.5042&lt;/em&gt; e do &lt;em&gt;R-4.0 for Windows (32/64 bit)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Primeiro instale o R e posteriormente o RStudio, de modo que o segundo reconheça automaticamente o primeiro. Se tudo estiver perfeito, a tela inicial do RStudio mostrará corretamente a versão do R.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;mapas-em-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Mapas em R&lt;/h1&gt;
&lt;p&gt;Agora a meta é gerar um mapa simples em R. Para tanto, primeiro define-se a malha municipal desejada. Para o presente caso, utilizam-se as malhas digitais do IBGE de &lt;a href=&#34;http://mapas.ibge.gov.br/bases-e-referenciais/bases-cartograficas/malhas-digitais&#34; class=&#34;uri&#34;&gt;http://mapas.ibge.gov.br/bases-e-referenciais/bases-cartograficas/malhas-digitais&lt;/a&gt;. Primeiro faz-se o download do arquivo zip completo para Mato Grosso do Sul (MS). A partir de &lt;a href=&#34;ftp://geoftp.ibge.gov.br/organizacao_do_territorio/malhas_territoriais/malhas_municipais/municipio_2015/UFs/MS/MS.zip&#34; class=&#34;uri&#34;&gt;ftp://geoftp.ibge.gov.br/organizacao_do_territorio/malhas_territoriais/malhas_municipais/municipio_2015/UFs/MS/MS.zip&lt;/a&gt;, o arquivo foi descompactado no mesmo diretorio de trabalho do projeto R, numa pasta de nome MS. Neste arquivo zip, existem arquivos referentes a unidade da federação 50 para Mato Grosso do Sul (50UE), assim como para a mesorregião (50ME), microrregião (50MI) e municípios (50MU). A referência E250GC_SIR diz respeito à escala (1:250.000) e origem georeferenciada dos mapas (Datum SIRGAS).&lt;/p&gt;
&lt;div id=&#34;pacotes-necessários&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Pacotes necessários&lt;/h2&gt;
&lt;p&gt;Agora deve-se instalar os pacotes úteis para fazer os mapas. O R vem com alguns pacotes automaticamente instalados, mas outros pacotes púbicos devem ser chamados para realizar operações específicas. Um deles é o pacote &lt;em&gt;rgdal&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rgdal)
library(maptools)
library(readxl)
library(spdep)
library(ctv)
library(sf)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O pacote &lt;em&gt;rgdal&lt;/em&gt; já fornecerá a primeira função prática para fazer o mapa. Usa-se aqui a função &lt;em&gt;readOGR&lt;/em&gt; e indica-se o nome do arquivo shape a ser buscado, neste caso, na pasta MS e o arquivo de nome 50MUE250GC_SIR. Neste caso, a base de municípios (indicado por MU). A saída (&lt;em&gt;plot&lt;/em&gt;) mostra o mapa e as características básicas (79 municípios e 2 campos - nome e código do município).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;MS.mu &amp;lt;- readOGR(&amp;quot;arquivos&amp;quot;, &amp;quot;50MUE250GC_SIR&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;OGR data source with driver: ESRI Shapefile 
Source: &amp;quot;C:\Users\amrof\Documents\blogdown\content\post\arquivos&amp;quot;, layer: &amp;quot;50MUE250GC_SIR&amp;quot;
with 79 features
It has 2 fields&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(MS.mu)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-05-22-Regional_Economics_CEmaps_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Agora propõe-se colorir o mapa municipal com cores inserindo o valor do Coeficiente de Especialização - CE. Para tanto, será necessário o pacote &lt;em&gt;sf&lt;/em&gt;. Colocaremos a saída dput() dos dados do CE calculado para os 79 municipios e 87 divisões CNAE, a partir dos dados de empregos do MTE/RAIS.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# pacotes chamados anteriormente
library(rgdal)
library(maptools)
library(readxl)
library(spdep)
library(ctv)
library(sf)

emprego_sf &amp;lt;- st_read(&amp;quot;arquivos/50MUE250GC_SIR.shp&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Reading layer `50MUE250GC_SIR&amp;#39; from data source `C:\Users\amrof\Documents\blogdown\content\post\arquivos\50MUE250GC_SIR.shp&amp;#39; using driver `ESRI Shapefile&amp;#39;
Simple feature collection with 79 features and 2 fields
geometry type:  POLYGON
dimension:      XY
bbox:           xmin: -58.16851 ymin: -24.06858 xmax: -50.92291 ymax: -17.16635
geographic CRS: SIRGAS 2000&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# ou para ver apenas o contorno
plot(st_geometry(emprego_sf))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-05-22-Regional_Economics_CEmaps_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Agora usarei o comando &lt;code&gt;merge&lt;/code&gt; para juntar os dados de CE ao objeto &lt;code&gt;emprego_sf&lt;/code&gt; criado no último chunk (bloco de scripts).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ce_2016 &amp;lt;- structure(list(codmun = c(&amp;quot;5000203&amp;quot;, &amp;quot;5000252&amp;quot;, &amp;quot;5000609&amp;quot;, &amp;quot;5000708&amp;quot;, 
    &amp;quot;5000807&amp;quot;, &amp;quot;5000856&amp;quot;, &amp;quot;5000906&amp;quot;, &amp;quot;5001003&amp;quot;, &amp;quot;5001102&amp;quot;, &amp;quot;5001243&amp;quot;, &amp;quot;5001508&amp;quot;, 
    &amp;quot;5001904&amp;quot;, &amp;quot;5002001&amp;quot;, &amp;quot;5002100&amp;quot;, &amp;quot;5002159&amp;quot;, &amp;quot;5002209&amp;quot;, &amp;quot;5002308&amp;quot;, &amp;quot;5002407&amp;quot;, 
    &amp;quot;5002605&amp;quot;, &amp;quot;5002704&amp;quot;, &amp;quot;5002803&amp;quot;, &amp;quot;5002902&amp;quot;, &amp;quot;5002951&amp;quot;, &amp;quot;5003108&amp;quot;, &amp;quot;5003157&amp;quot;, 
    &amp;quot;5003207&amp;quot;, &amp;quot;5003256&amp;quot;, &amp;quot;5003306&amp;quot;, &amp;quot;5003454&amp;quot;, &amp;quot;5003488&amp;quot;, &amp;quot;5003504&amp;quot;, &amp;quot;5003702&amp;quot;, 
    &amp;quot;5003751&amp;quot;, &amp;quot;5003801&amp;quot;, &amp;quot;5003900&amp;quot;, &amp;quot;5004007&amp;quot;, &amp;quot;5004106&amp;quot;, &amp;quot;5004304&amp;quot;, &amp;quot;5004403&amp;quot;, 
    &amp;quot;5004502&amp;quot;, &amp;quot;5004601&amp;quot;, &amp;quot;5004700&amp;quot;, &amp;quot;5004809&amp;quot;, &amp;quot;5004908&amp;quot;, &amp;quot;5005004&amp;quot;, &amp;quot;5005103&amp;quot;, 
    &amp;quot;5005152&amp;quot;, &amp;quot;5005202&amp;quot;, &amp;quot;5005251&amp;quot;, &amp;quot;5005400&amp;quot;, &amp;quot;5005608&amp;quot;, &amp;quot;5005681&amp;quot;, &amp;quot;5005707&amp;quot;, 
    &amp;quot;5005806&amp;quot;, &amp;quot;5006002&amp;quot;, &amp;quot;5006200&amp;quot;, &amp;quot;5006259&amp;quot;, &amp;quot;5006275&amp;quot;, &amp;quot;5006309&amp;quot;, &amp;quot;5006358&amp;quot;, 
    &amp;quot;5006408&amp;quot;, &amp;quot;5006606&amp;quot;, &amp;quot;5006903&amp;quot;, &amp;quot;5007109&amp;quot;, &amp;quot;5007208&amp;quot;, &amp;quot;5007307&amp;quot;, &amp;quot;5007406&amp;quot;, 
    &amp;quot;5007505&amp;quot;, &amp;quot;5007554&amp;quot;, &amp;quot;5007695&amp;quot;, &amp;quot;5007802&amp;quot;, &amp;quot;5007703&amp;quot;, &amp;quot;5007901&amp;quot;, &amp;quot;5007935&amp;quot;, 
    &amp;quot;5007950&amp;quot;, &amp;quot;5007976&amp;quot;, &amp;quot;5008008&amp;quot;, &amp;quot;5008305&amp;quot;, &amp;quot;5008404&amp;quot;), nomemun = c(&amp;quot;Água Clara - MS&amp;quot;, 
    &amp;quot;Alcinópolis - MS&amp;quot;, &amp;quot;Amambai - MS&amp;quot;, &amp;quot;Anastácio - MS&amp;quot;, &amp;quot;Anaurilândia - MS&amp;quot;, &amp;quot;Angélica - MS&amp;quot;, 
    &amp;quot;Antônio João - MS&amp;quot;, &amp;quot;Aparecida do Taboado - MS&amp;quot;, &amp;quot;Aquidauana - MS&amp;quot;, &amp;quot;Aral Moreira - MS&amp;quot;, 
    &amp;quot;Bandeirantes - MS&amp;quot;, &amp;quot;Bataguassu - MS&amp;quot;, &amp;quot;Batayporã - MS&amp;quot;, &amp;quot;Bela Vista - MS&amp;quot;, 
    &amp;quot;Bodoquena - MS&amp;quot;, &amp;quot;Bonito - MS&amp;quot;, &amp;quot;Brasilândia - MS&amp;quot;, &amp;quot;Caarapó - MS&amp;quot;, &amp;quot;Camapuã - MS&amp;quot;, 
    &amp;quot;Campo Grande - MS&amp;quot;, &amp;quot;Caracol - MS&amp;quot;, &amp;quot;Cassilândia - MS&amp;quot;, &amp;quot;Chapadão do Sul - MS&amp;quot;, 
    &amp;quot;Corguinho - MS&amp;quot;, &amp;quot;Coronel Sapucaia - MS&amp;quot;, &amp;quot;Corumbá - MS&amp;quot;, &amp;quot;Costa Rica - MS&amp;quot;, 
    &amp;quot;Coxim - MS&amp;quot;, &amp;quot;Deodápolis - MS&amp;quot;, &amp;quot;Dois Irmãos do Buriti - MS&amp;quot;, &amp;quot;Douradina - MS&amp;quot;, 
    &amp;quot;Dourados - MS&amp;quot;, &amp;quot;Eldorado - MS&amp;quot;, &amp;quot;Fátima do Sul - MS&amp;quot;, &amp;quot;Figueirão - MS&amp;quot;, &amp;quot;Glória de Dourados - MS&amp;quot;, 
    &amp;quot;Guia Lopes da Laguna - MS&amp;quot;, &amp;quot;Iguatemi - MS&amp;quot;, &amp;quot;Inocência - MS&amp;quot;, &amp;quot;Itaporã - MS&amp;quot;, 
    &amp;quot;Itaquiraí - MS&amp;quot;, &amp;quot;Ivinhema - MS&amp;quot;, &amp;quot;Japorã - MS&amp;quot;, &amp;quot;Jaraguari - MS&amp;quot;, &amp;quot;Jardim - MS&amp;quot;, 
    &amp;quot;Jateí - MS&amp;quot;, &amp;quot;Juti - MS&amp;quot;, &amp;quot;Ladário - MS&amp;quot;, &amp;quot;Laguna Carapã - MS&amp;quot;, &amp;quot;Maracaju - MS&amp;quot;, 
    &amp;quot;Miranda - MS&amp;quot;, &amp;quot;Mundo Novo - MS&amp;quot;, &amp;quot;Naviraí - MS&amp;quot;, &amp;quot;Nioaque - MS&amp;quot;, &amp;quot;Nova Alvorada do Sul - MS&amp;quot;, 
    &amp;quot;Nova Andradina - MS&amp;quot;, &amp;quot;Novo Horizonte do Sul - MS&amp;quot;, &amp;quot;Paraíso das Águas - MS&amp;quot;, 
    &amp;quot;Paranaíba - MS&amp;quot;, &amp;quot;Paranhos - MS&amp;quot;, &amp;quot;Pedro Gomes - MS&amp;quot;, &amp;quot;Ponta Porã - MS&amp;quot;, &amp;quot;Porto Murtinho - MS&amp;quot;, 
    &amp;quot;Ribas do Rio Pardo - MS&amp;quot;, &amp;quot;Rio Brilhante - MS&amp;quot;, &amp;quot;Rio Negro - MS&amp;quot;, &amp;quot;Rio Verde de Mato Grosso - MS&amp;quot;, 
    &amp;quot;Rochedo - MS&amp;quot;, &amp;quot;Santa Rita do Pardo - MS&amp;quot;, &amp;quot;São Gabriel do Oeste - MS&amp;quot;, &amp;quot;Selvíria - MS&amp;quot;, 
    &amp;quot;Sete Quedas - MS&amp;quot;, &amp;quot;Sidrolândia - MS&amp;quot;, &amp;quot;Sonora - MS&amp;quot;, &amp;quot;Tacuru - MS&amp;quot;, &amp;quot;Taquarussu - MS&amp;quot;, 
    &amp;quot;Terenos - MS&amp;quot;, &amp;quot;Três Lagoas - MS&amp;quot;, &amp;quot;Vicentina - MS&amp;quot;), CE_2016 = c(0.5772, 0.5627, 
    0.2312, 0.4615, 0.4398, 0.7682, 0.5212, 0.4393, 0.2811, 0.4744, 0.4282, 0.4141, 
    0.3852, 0.3901, 0.4941, 0.4008, 0.4639, 0.3579, 0.3499, 0.19, 0.5811, 0.2847, 
    0.3367, 0.5722, 0.4153, 0.2426, 0.4267, 0.2797, 0.3323, 0.4934, 0.4316, 0.2656, 
    0.2798, 0.3251, 0.564, 0.3027, 0.3983, 0.3286, 0.4468, 0.3832, 0.4548, 0.2763, 
    0.6395, 0.5064, 0.2479, 0.6099, 0.4653, 0.6171, 0.5526, 0.2785, 0.3785, 0.3125, 
    0.2198, 0.431, 0.449, 0.2381, 0.3679, 0.5354, 0.3131, 0.4944, 0.4372, 0.1949, 
    0.5528, 0.5936, 0.4358, 0.4569, 0.3518, 0.5224, 0.5895, 0.344, 0.5973, 0.3571, 
    0.3364, 0.498, 0.4703, 0.6074, 0.4552, 0.3702, 0.5127)), class = c(&amp;quot;tbl_df&amp;quot;, 
    &amp;quot;tbl&amp;quot;, &amp;quot;data.frame&amp;quot;), row.names = c(NA, -79L))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Aos leitores mais curiosos, uma boa leitura está em &lt;a href=&#34;https://r-spatial.github.io/sf/articles/sf5.html&#34; class=&#34;uri&#34;&gt;https://r-spatial.github.io/sf/articles/sf5.html&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;emprego_sf_merged &amp;lt;- merge(emprego_sf, ce_2016, by.x = &amp;quot;CD_GEOCMU&amp;quot;, by.y = &amp;quot;codmun&amp;quot;)
names(emprego_sf_merged)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;CD_GEOCMU&amp;quot;  &amp;quot;NM_MUNICIP&amp;quot; &amp;quot;nomemun&amp;quot;    &amp;quot;CE_2016&amp;quot;    &amp;quot;geometry&amp;quot;  &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(emprego_sf_merged[, &amp;quot;CE_2016&amp;quot;], border = &amp;quot;red&amp;quot;, axes = TRUE, main = &amp;quot;CE 2016 MS, 79obs&amp;quot;, 
    breaks = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-05-22-Regional_Economics_CEmaps_files/figure-html/merge-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Ou fazendo igual ao mapa de Figueiredo (2020), ou associar o objeto &lt;code&gt;sf&lt;/code&gt; com o &lt;code&gt;ggplot2&lt;/code&gt;::&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(&amp;quot;ggspatial&amp;quot;)
ggplot() + geom_sf(data = emprego_sf_merged, aes(fill = CE_2016), color = NA, size = 0.15) + 
    labs(title = &amp;quot;CE 2016 dos Municípios de MS&amp;quot;, caption = &amp;quot;Fonte: Elaboração própria&amp;quot;, 
        size = 8) + scale_fill_distiller(palette = &amp;quot;RdGy&amp;quot;, limits = c(0.1, 0.8), 
    name = &amp;quot;CE_2016&amp;quot;) + theme_minimal() + annotation_north_arrow(location = &amp;quot;bl&amp;quot;, 
    which_north = &amp;quot;true&amp;quot;, pad_x = unit(0.65, &amp;quot;in&amp;quot;), pad_y = unit(0.3, &amp;quot;in&amp;quot;), style = north_arrow_fancy_orienteering) + 
    annotation_scale(location = &amp;quot;bl&amp;quot;, width_hint = 0.3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-05-22-Regional_Economics_CEmaps_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Ou usando o &lt;code&gt;mapview&lt;/code&gt; conforme Pebesma (2018) e &lt;a href=&#34;https://r-spatial.github.io/sf/articles/sf5.html&#34; class=&#34;uri&#34;&gt;https://r-spatial.github.io/sf/articles/sf5.html&lt;/a&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(mapview)
library(sf)
library(mapview)
library(leaflet)
library(leafem)
library(leaflet.extras)
library(htmlwidgets)
library(dplyr)
m &amp;lt;- mapview(emprego_sf_merged[&amp;quot;CE_2016&amp;quot;])
mapshot(m, url = paste0(getwd(), &amp;quot;/map.html&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O chunk acima gerou um arquivo html que foi colocado externamente para vocês &lt;a href=&#34;https://adrianofigueiredo.netlify.app/github.com/amrofi/blogdown/tree/master/static/post/map.html&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tmap)
library(sf)
map_emprego = qtm(emprego_sf_merged, fill = &amp;quot;CE_2016&amp;quot;)
tmap_mode(mode = c(&amp;quot;plot&amp;quot;))  # &amp;#39;view&amp;#39; para mapa dinamico
map_emprego + tm_compass(type = &amp;quot;8star&amp;quot;, position = c(&amp;quot;left&amp;quot;, &amp;quot;top&amp;quot;)) + tm_scale_bar(breaks = c(0, 
    100, 200), text.size = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-05-22-Regional_Economics_CEmaps_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;Referências&#34; class=&#34;section level1 unnumbered&#34;&gt;
&lt;h1&gt;Referências&lt;/h1&gt;
&lt;p&gt;ENGEL, Claudia A. Using Spatial Data with R. Disponível em: &lt;a href=&#34;https://cengel.github.io/R-spatial/&#34; class=&#34;uri&#34;&gt;https://cengel.github.io/R-spatial/&lt;/a&gt;. 11 Feb, 2019.&lt;/p&gt;
&lt;p&gt;FIGUEIREDO, Adriano Marcos Rodrigues. Economia Regional: polos, diversidade e especialização em R. Campo Grande-MS,Brasil: RStudio/Rpubs, 2019. Disponível em &lt;a href=&#34;http://rpubs.com/amrofi/Regional_Economics_poles_diversity&#34; class=&#34;uri&#34;&gt;http://rpubs.com/amrofi/Regional_Economics_poles_diversity&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;FIGUEIREDO, Adriano Marcos Rodrigues. Economia Regional em R: Indicadores de análise de especialização regional - QL, CE, KSI, RDI, DIV, UBIQ. Campo Grande-MS,Brasil: RStudio/Rpubs, 2020. Disponível em &lt;a href=&#34;http://rpubs.com/amrofi/regional_parte_2&#34; class=&#34;uri&#34;&gt;http://rpubs.com/amrofi/regional_parte_2&lt;/a&gt; e &lt;a href=&#34;https://adrianofigueiredo.netlify.app/post/economia-regional-em-r-indicadores-de-analise-2/&#34; class=&#34;uri&#34;&gt;https://adrianofigueiredo.netlify.app/post/economia-regional-em-r-indicadores-de-analise-2/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;PEBESMA, E., 2018. Simple Features for R: Standardized Support for Spatial Vector Data. The R Journal 10 (1), 439-446, &lt;a href=&#34;https://doi.org/10.32614/RJ-2018-009&#34; class=&#34;uri&#34;&gt;https://doi.org/10.32614/RJ-2018-009&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Mapas em R com `geobr`</title>
      <link>/post/mapas-em-r-com-geobr/</link>
      <pubDate>Fri, 31 Jan 2020 00:00:00 +0000</pubDate>
      <guid>/post/mapas-em-r-com-geobr/</guid>
      <description>


&lt;div id=&#34;Licença&#34; class=&#34;section level1 unnumbered&#34;&gt;
&lt;h1&gt;Licença&lt;/h1&gt;
&lt;p&gt;This work is licensed under the Creative Commons Attribution-ShareAlike 4.0 International License. To view a copy of this license, visit &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34; class=&#34;uri&#34;&gt;http://creativecommons.org/licenses/by-sa/4.0/&lt;/a&gt; or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://mirrors.creativecommons.org/presskit/buttons/88x31/png/by-sa.png&#34; style=&#34;width:25.0%&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;License: CC BY-SA 4.0&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;As ideias aqui expressas são de responsabilidade exclusiva do autor, e não representam as opiniões da instituição a que pertence.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;Citação&#34; class=&#34;section level1 unnumbered&#34;&gt;
&lt;h1&gt;Citação&lt;/h1&gt;
&lt;p&gt;Sugestão para citação:
FIGUEIREDO, Adriano Marcos Rodrigues. Mapas em R com &lt;code&gt;geobr&lt;/code&gt;. Campo Grande-MS,Brasil: RStudio/Rpubs, 2020. Disponível em &lt;a href=&#34;http://rpubs.com/amrofi/maps_geobr&#34; class=&#34;uri&#34;&gt;http://rpubs.com/amrofi/maps_geobr&lt;/a&gt; e &lt;a href=&#34;https://adrianofigueiredo.netlify.com/post/mapas-em-r-com-geobr/&#34; class=&#34;uri&#34;&gt;https://adrianofigueiredo.netlify.com/post/mapas-em-r-com-geobr/&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;script-para-reprodução-se-utilizar-citar-como-acima&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Script para reprodução (se utilizar, citar como acima)&lt;/h1&gt;
&lt;a href=&#34;data:text/x-markdown;base64,&#34; download=&#34;2020-01-31-mapas-em-r-com-geobr.Rmd&#34;&gt;Download 2020-01-31-mapas-em-r-com-geobr.Rmd&lt;/a&gt;
&lt;/div&gt;
&lt;div id=&#34;introdução&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introdução&lt;/h1&gt;
&lt;p&gt;Para realizar seu mapa em R, inicialmente o leitor deve baixar os programas e pacotes necessários ao projeto. Neste caso, sugere-se que utilize o RStudio e o R atualizados, a partir de: &lt;a href=&#34;http://cran.r-project.org/bin/windows/base/&#34; class=&#34;uri&#34;&gt;http://cran.r-project.org/bin/windows/base/&lt;/a&gt; e &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download3/&#34; class=&#34;uri&#34;&gt;https://www.rstudio.com/products/rstudio/download3/&lt;/a&gt;. Quando esta revisão foi feita, a versão do RStudio era a &lt;em&gt;RStudio Desktop 1.2.5033&lt;/em&gt; e do &lt;em&gt;R-3.6.1 for Windows (32/64 bit)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Primeiro instale o R e posteriormente o RStudio, de modo que o segundo reconheça automaticamente o primeiro. Se tudo estiver perfeito, a tela inicial do RStudio mostrará corretamente a versão do R.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;mapas-em-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Mapas em R&lt;/h1&gt;
&lt;p&gt;Agora a meta é gerar um mapa simples em R. Para tanto, primeiro define-se a malha municipal desejada. Para o presente caso, utilizam-se as malhas digitais do pacote &lt;code&gt;geobr&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Os pacotes (previamente instalados) são aqui carregados:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(geobr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required namespace: sf&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 4.0.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(sf)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Linking to GEOS 3.8.0, GDAL 3.0.4, PROJ 6.3.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;dplyr&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     filter, lag&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     intersect, setdiff, setequal, union&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rio)
library(readr)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O pacote &lt;code&gt;geobr&lt;/code&gt; tem as rotinas para o download dos mapas com divisões territoriais variadas. Faremos para os municípios de Mato Grosso do Sul (MS), malha com a estrutura municipal de 2018, contendo 79 municípios. É importante o leitor ter essa estrutura em mente, pois ao longo dos anos, municípios são criados a partir de desmembramentos de outros, não necessariamente respeitando limites de distritos ou outros atributos previamente definidos.&lt;/p&gt;
&lt;p&gt;Este rápido exemplo faz uso das funções do pacote &lt;code&gt;geobr&lt;/code&gt; e assim, precisamos saber quais os códigos para cada estado. A função &lt;code&gt;download_metadata()&lt;/code&gt; permite encontrar os códigos para estado e ano e a desagregação desejada (município, estado etc).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;metadata&amp;lt;-download_metadata() # para ver codigos
head(metadata)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Posso verificar que para MS, especificarei 50 e para o ano de 2018. Agora posso baixar os dados (shapes) para os municípios de Mato Grosso do Sul fazendo uso da função &lt;code&gt;read_municipality(code_muni=50, year=2018)&lt;/code&gt; em:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# não executei agora pois farei para 2010 mais a frente
all_mun_ms &amp;lt;- read_municipality(code_muni=50, year=2018)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O usuário que desejar baixar todos os municípios observará alguma demora no download dos dados, devido ao número de municípios e restrito à velocidade de sua internet.&lt;br /&gt;
A visualização da saída do objeto &lt;code&gt;all_mun_ms&lt;/code&gt; indica as variáveis armazenadas. É possível verificar que esse objeto é da classe &lt;code&gt;sf&lt;/code&gt; e &lt;code&gt;data.frame&lt;/code&gt;. Um objeto &lt;code&gt;sf&lt;/code&gt; contém uma coleção de recursos incluindo atributos e geometrias que contemplam os aspectos espaciais para desenhar o mapa.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class(all_mun_ms)
[1] &amp;quot;sf&amp;quot;         &amp;quot;data.frame&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O dataset pode então ser observado. O dataset contém o código do município, o nome do município, o código do estado, a sigla do estado e aspectos geográficos como latitude, longitude dos vários segmentos que permitirão construir o mapa.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/2020-01-31-mapas-em-r-com-geobr_files/saida_all_mun_ms.PNG&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Imagem do objeto &lt;code&gt;all_mun_ms&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Agora vou construir uma variável para ser plotada no mapa. Preciso ter os meus dados em uma planilha em que uma das colunas será o código do município da mesma forma que consta em &lt;code&gt;code_muni&lt;/code&gt; no objeto &lt;code&gt;all_mun_ms&lt;/code&gt;. Recomendo fazer a associação entre os dados por meio do código, menos sujeito a erros de digitação que para os nomes dos municípios. Para este exemplo, baixei os dados de &lt;a href=&#34;http://atlasbrasil.org.br/2013/pt/download/&#34; class=&#34;uri&#34;&gt;http://atlasbrasil.org.br/2013/pt/download/&lt;/a&gt;, ou mais precisamente em &lt;a href=&#34;http://atlasbrasil.org.br/2013/data/rawData/atlas2013_dadosbrutos_pt.xlsx&#34; class=&#34;uri&#34;&gt;http://atlasbrasil.org.br/2013/data/rawData/atlas2013_dadosbrutos_pt.xlsx&lt;/a&gt;, o site oficial do PNUD para o Índice de Desenvolvimento Humano Municipal do Brasil, para 2013, que nesse caso se refere aos dados do censo demográfico 2010.&lt;/p&gt;
&lt;p&gt;No caso, o arquivo Excel veio com dados de todo o Brasil e para os anos 1991, 2000 e 2010, mas fiz uma extração dos dados para apenas os municípios de MS e 2010. Observar que nesse caso tenho uma estrutura municipal de 78 municípios invés dos 79 de 2018.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Executei uma vez e gerei dput para executar mais rapidamente conforme próximo chunk
library(readxl)
url &amp;lt;- &amp;quot;http://atlasbrasil.org.br/2013/data/rawData/atlas2013_dadosbrutos_pt.xlsx&amp;quot;
destfile &amp;lt;- &amp;quot;atlas2013_dadosbrutos_pt.xlsx&amp;quot;
#options(timeout= 4000000) # as vezes o site demora conforme sua internet
curl::curl_download(url, destfile)
atlas2013_dadosbrutos_pt &amp;lt;- read_excel(destfile, 
    sheet = &amp;quot;MUN 91-00-10&amp;quot;)
dados_ms &amp;lt;- subset(atlas2013_dadosbrutos_pt, UF == &amp;#39;50&amp;#39; &amp;amp; ANO == &amp;#39;2010&amp;#39;,
                   select=c(Codmun7,IDHM,IDHM_E,IDHM_L,IDHM_R))
print(dados_ms)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Segue o chunk para carregar dados de &lt;code&gt;dados_ms&lt;/code&gt; sem precisar acessar o arquivo mestre do chunk anterior. Gera os mesmos resultados acima, transformados a partir do &lt;code&gt;dput()&lt;/code&gt; de &lt;code&gt;dados_ms&lt;/code&gt;. Esta alternativa acelera a execução do script.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dados_ms&amp;lt;-structure(list(Codmun7 = c(5000203, 5000252, 5000609, 5000708, 
5000807, 5000856, 5000906, 5001003, 5001102, 5001243, 5001508, 
5001904, 5002001, 5002100, 5002159, 5002209, 5002308, 5002407, 
5002605, 5002704, 5002803, 5002902, 5002951, 5003108, 5003157, 
5003207, 5003256, 5003306, 5003454, 5003488, 5003504, 5003702, 
5003751, 5003801, 5003900, 5004007, 5004106, 5004304, 5004403, 
5004502, 5004601, 5004700, 5004809, 5004908, 5005004, 5005103, 
5005152, 5005202, 5005251, 5005400, 5005608, 5005681, 5005707, 
5005806, 5006002, 5006200, 5006259, 5006309, 5006358, 5006408, 
5006606, 5006903, 5007109, 5007208, 5007307, 5007406, 5007505, 
5007554, 5007695, 5007703, 5007802, 5007901, 5007935, 5007950, 
5007976, 5008008, 5008305, 5008404), IDHM = c(0.67, 0.711, 0.673, 
0.663, 0.67, 0.697, 0.643, 0.697, 0.688, 0.633, 0.681, 0.71, 
0.684, 0.698, 0.666, 0.67, 0.701, 0.692, 0.703, 0.784, 0.647, 
0.727, 0.754, 0.671, 0.589, 0.7, 0.706, 0.703, 0.694, 0.639, 
0.699, 0.747, 0.684, 0.714, 0.66, 0.721, 0.675, 0.662, 0.681, 
0.654, 0.62, 0.72, 0.526, 0.664, 0.712, 0.708, 0.623, 0.704, 
0.672, 0.736, 0.632, 0.686, 0.7, 0.639, 0.694, 0.721, 0.649, 
0.721, 0.588, 0.671, 0.701, 0.666, 0.664, 0.715, 0.709, 0.673, 
0.651, 0.642, 0.729, 0.614, 0.682, 0.686, 0.681, 0.593, 0.651, 
0.658, 0.744, 0.711), IDHM_E = c(0.518, 0.572, 0.546, 0.557, 
0.538, 0.582, 0.526, 0.588, 0.562, 0.507, 0.537, 0.606, 0.559, 
0.585, 0.573, 0.508, 0.57, 0.592, 0.596, 0.724, 0.522, 0.627, 
0.665, 0.531, 0.417, 0.586, 0.606, 0.579, 0.595, 0.528, 0.597, 
0.657, 0.577, 0.621, 0.511, 0.648, 0.549, 0.53, 0.531, 0.523, 
0.479, 0.615, 0.337, 0.53, 0.595, 0.579, 0.485, 0.618, 0.545, 
0.613, 0.507, 0.565, 0.597, 0.483, 0.554, 0.616, 0.523, 0.627, 
0.444, 0.562, 0.598, 0.526, 0.519, 0.59, 0.585, 0.521, 0.491, 
0.505, 0.608, 0.45, 0.576, 0.561, 0.557, 0.434, 0.545, 0.521, 
0.645, 0.626), IDHM_L = c(0.823, 0.858, 0.818, 0.789, 0.826, 
0.839, 0.799, 0.804, 0.84, 0.798, 0.848, 0.847, 0.814, 0.83, 
0.776, 0.831, 0.837, 0.828, 0.817, 0.844, 0.826, 0.811, 0.85, 
0.83, 0.806, 0.834, 0.811, 0.836, 0.81, 0.773, 0.809, 0.843, 
0.824, 0.815, 0.83, 0.822, 0.826, 0.817, 0.846, 0.809, 0.772, 
0.85, 0.791, 0.827, 0.845, 0.857, 0.77, 0.822, 0.822, 0.873, 
0.782, 0.808, 0.803, 0.822, 0.809, 0.85, 0.798, 0.823, 0.811, 
0.801, 0.812, 0.83, 0.83, 0.861, 0.869, 0.852, 0.83, 0.8, 0.85, 
0.778, 0.825, 0.829, 0.803, 0.782, 0.769, 0.839, 0.849, 0.835
), IDHM_R = c(0.705, 0.733, 0.683, 0.663, 0.676, 0.692, 0.633, 
0.717, 0.69, 0.628, 0.694, 0.698, 0.702, 0.699, 0.665, 0.714, 
0.721, 0.676, 0.715, 0.79, 0.628, 0.756, 0.758, 0.684, 0.607, 
0.701, 0.717, 0.719, 0.693, 0.64, 0.706, 0.753, 0.674, 0.719, 
0.677, 0.705, 0.677, 0.671, 0.702, 0.66, 0.645, 0.715, 0.547, 
0.668, 0.718, 0.716, 0.646, 0.687, 0.676, 0.744, 0.638, 0.707, 
0.715, 0.658, 0.746, 0.716, 0.656, 0.727, 0.566, 0.672, 0.708, 
0.677, 0.681, 0.72, 0.702, 0.686, 0.676, 0.655, 0.751, 0.66, 
0.668, 0.694, 0.706, 0.615, 0.657, 0.651, 0.752, 0.689)), row.names = c(NA, 
-78L), class = c(&amp;quot;tbl_df&amp;quot;, &amp;quot;tbl&amp;quot;, &amp;quot;data.frame&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Segue o chunk para opção de download manual e armazenamento em seu diretório.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# trazendo os dados do Brasil todo apenas para municipios
library(readxl)
atlas2013_dadosbrutos_pt &amp;lt;- read_excel(&amp;quot;atlas2013_dadosbrutos_pt.xlsx&amp;quot;, 
    sheet = &amp;quot;MUN 91-00-10&amp;quot;)
# reduzir linhas para 2010 e MS
# usando a funcao subset para pegar as colunas de IDH até a última ()
dados_ms &amp;lt;- subset(atlas2013_dadosbrutos_pt, UF == &amp;#39;50&amp;#39; &amp;amp; ANO == &amp;#39;2010&amp;#39;,
                   select=c(Codmun7,IDHM,IDHM_E,IDHM_L,IDHM_R))
print(dados_ms)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Precisarei portanto da estrutura de 2010 para compatibilizar o mapa. A execução normal do próximo chunk mostraria o andamento do download da estrutura de 2010, mas em meu markdown solicitei para ‘hide’ para economizar espaço do post.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(geobr)
# sugiro permanecer o timeout anterior, options(timeout= 4000000)
all_mun_ms &amp;lt;- read_municipality(code_muni=50, year=2010)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Using year 2010&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Juntarei os datasets pela condição de que o &lt;code&gt;code_muni&lt;/code&gt; do objeto &lt;code&gt;all_mun_ms&lt;/code&gt; é igual ao &lt;code&gt;Codmun7&lt;/code&gt; do objeto &lt;code&gt;dados_ms&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dataset_final = left_join(all_mun_ms, dados_ms, by=c(&amp;quot;code_muni&amp;quot;=&amp;quot;Codmun7&amp;quot;))
max(dataset_final$IDHM) # 0.784&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.784&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;min(dataset_final$IDHM) # 0.526&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.526&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() +
  geom_sf(data=dataset_final, aes(fill=IDHM), color= NA, size=.15)+
  labs(title=&amp;quot;IDHM 2013 (ano base 2010) dos Municipíos de MS&amp;quot;,
       caption=&amp;#39;Fonte: Elaboração própria&amp;#39;, size=8)+
  scale_fill_distiller(palette = &amp;quot;Greens&amp;quot;, limits=c(0.5, 0.8),
                       name=&amp;quot;Code_muni&amp;quot;)+
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-01-31-mapas-em-r-com-geobr_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Sendo um mapa feito em &lt;code&gt;ggplot2&lt;/code&gt; pelos comandos &lt;code&gt;ggplot() +   geom_sf(data=dataset_final, aes(fill=IDHM), color= NA, size=.15)&lt;/code&gt;, o padrão é um mapa na escala azul. Ou seja, fazendo agora um mapa para o IDHM_E (IDHM Educação), recomendo o usuário fazer o passo a passo de modo a ver exatamente o que o código realiza:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#dataset_final = left_join(all_mun_ms, dados_ms, by=c(&amp;quot;code_muni&amp;quot;=&amp;quot;Codmun7&amp;quot;))
max(dataset_final$IDHM_E) # 0.724&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.724&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;min(dataset_final$IDHM_E) # 0.337&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.337&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() +
  geom_sf(data=dataset_final, aes(fill=IDHM_E), color= NA, size=.15)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-01-31-mapas-em-r-com-geobr_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Veja que o mapa anterior saiu em azul, sem rótulos. Observe que nesse caso e no próximo, não fiz nenhuma restrição à legenda.&lt;/p&gt;
&lt;p&gt;O próximo sai com rótulos do título e nota ao final do mapa.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() +
  geom_sf(data=dataset_final, aes(fill=IDHM_E), color= NA, size=.15)+
  labs(title=&amp;quot;IDHM Educação 2013 (ano base 2010) dos Municipíos de MS&amp;quot;,
       caption=&amp;#39;Fonte: Elaboração própria&amp;#39;, size=8)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-01-31-mapas-em-r-com-geobr_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Para o próximo mapa, coloco a palheta de cores em vermelho e os limites para as classes, agora de 0 a 1.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() +
  geom_sf(data=dataset_final, aes(fill=IDHM_E), color= NA, size=.15)+
  labs(title=&amp;quot;IDHM Educação 2013 (ano base 2010) dos Municipíos de MS&amp;quot;,
       caption=&amp;#39;Fonte: Elaboração própria&amp;#39;, size=8)+
  scale_fill_distiller(palette = &amp;quot;Reds&amp;quot;, limits=c(0.0, 1.0),
                       name=&amp;quot;Code_muni&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-01-31-mapas-em-r-com-geobr_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;No exemplo abaixo faço um caso particular em que um município, o de máximo IDHM_E ficou excluído por uma restrição ao delimitar o máximo da palheta em 0.7 (o valor seria de Campo Grande, 0.724, maior que 0.7). Portanto, o município ficou em preto.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() +
  geom_sf(data=dataset_final, aes(fill=IDHM_E), color= NA, size=.15)+
  labs(title=&amp;quot;IDHM Educação 2013 (ano base 2010) dos Municipíos de MS&amp;quot;,
       caption=&amp;#39;Fonte: Elaboração própria&amp;#39;, size=8)+
  scale_fill_distiller(limits=c(0.3, 0.7))+
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-01-31-mapas-em-r-com-geobr_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Outras palhetas de cores pode ser visualizada em &lt;a href=&#34;http://www.sthda.com/english/wiki/ggplot2-colors-how-to-change-colors-automatically-and-manually&#34; class=&#34;uri&#34;&gt;http://www.sthda.com/english/wiki/ggplot2-colors-how-to-change-colors-automatically-and-manually&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# dataset_final = left_join(all_mun_ms, dados_ms, by=c(&amp;quot;code_muni&amp;quot;=&amp;quot;Codmun7&amp;quot;))
# max(dataset_final$IDHM) # 0.784
# min(dataset_final$IDHM) # 0.526
ggplot() +
  geom_sf(data=dataset_final, aes(fill=IDHM), color= NA, size=.15)+
  labs(title=&amp;quot;IDHM 2013 (ano base 2010) dos Municipíos de MS&amp;quot;,
       caption=&amp;#39;Fonte: Elaboração própria&amp;#39;, size=8)+
  scale_fill_distiller(palette = &amp;quot;RdGy&amp;quot;, limits=c(0.5, 0.8),
                       name=&amp;quot;Code_muni&amp;quot;)+
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-01-31-mapas-em-r-com-geobr_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;Referências&#34; class=&#34;section level1 unnumbered&#34;&gt;
&lt;h1&gt;Referências&lt;/h1&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Aplicativo Shiny experimental para as populações dos principais aglomerados urbanos do mundo</title>
      <link>/post/aplicativo-shiny-experimental-para-as-populacoes-dos-principais-aglomerados-urbanos-do-mundo/</link>
      <pubDate>Wed, 29 Jan 2020 00:00:00 +0000</pubDate>
      <guid>/post/aplicativo-shiny-experimental-para-as-populacoes-dos-principais-aglomerados-urbanos-do-mundo/</guid>
      <description>


&lt;div id=&#34;Licença&#34; class=&#34;section level1 unnumbered&#34;&gt;
&lt;h1&gt;Licença&lt;/h1&gt;
&lt;p&gt;This work is licensed under the Creative Commons Attribution-ShareAlike 4.0 International License. To view a copy of this license, visit &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34; class=&#34;uri&#34;&gt;http://creativecommons.org/licenses/by-sa/4.0/&lt;/a&gt; or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://mirrors.creativecommons.org/presskit/buttons/88x31/png/by-sa.png&#34; style=&#34;width:25.0%&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;License: CC BY-SA 4.0&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;informe&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Informe&lt;/h1&gt;
&lt;p&gt;Prezados leitores.&lt;/p&gt;
&lt;p&gt;Iniciei a jornada de fazer um aplicativo web com o &lt;code&gt;Shiny&lt;/code&gt; para o RStudio. Adaptei a instrução de Angela Li (2019), disponível em: &lt;a href=&#34;https://spatialanalysis.github.io/workshop-notes/interactive-maps-with-shiny.html&#34; class=&#34;uri&#34;&gt;https://spatialanalysis.github.io/workshop-notes/interactive-maps-with-shiny.html&lt;/a&gt; e fui alterando ao idioma português e algumas alterações de formato.&lt;/p&gt;
&lt;p&gt;É, portanto, apenas um exemplo básico de Shiny para estudos e aperfeiçoamentos posteriores. Fiquem a vontade para criticá-lo.&lt;/p&gt;
&lt;p&gt;O aplicativo está acessível em: &lt;a href=&#34;https://amrofi.shinyapps.io/shiny_workshop/&#34; class=&#34;uri&#34;&gt;https://amrofi.shinyapps.io/shiny_workshop/&lt;/a&gt; e o código está reproduzido abaixo.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;códigoscript&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Código/Script&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;#
# This is a Shiny web application. You can run the application by clicking
# the &amp;#39;Run App&amp;#39; button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
# https://spatialanalysis.github.io/workshop-notes/interactive-maps-with-shiny.html

library(shiny)
library(leaflet)
library(spData)
library(dplyr)
library(magick)
library(sf)

# Definir UI para aplicativo que filtra os pontos do mapa baseado no ano e
# população mínima
ui &amp;lt;- fluidPage(
   
   # Titulo do Aplicativo
   titlePanel(&amp;quot;População das Aglomerações Urbanas no Mundo ao longo dos anos&amp;quot;),
   
   # Barra lateral com insumo deslizante por ano, insumo numérico para população 
   sidebarLayout(
      sidebarPanel(
         h5(&amp;quot;Aplicativo Shiny adaptado de Angela Li, 2019, disponível em: &amp;quot;),
         a(&amp;quot;&amp;lt;https://spatialanalysis.github.io/workshop-notes/interactive-maps-with-shiny.html&amp;gt;&amp;quot;, style = &amp;quot;color:blue&amp;quot;),
         p(&amp;quot;&amp;quot;),
         strong(&amp;quot;Adaptado por Prof. Adriano Marcos Rodrigues Figueiredo&amp;quot;),
         p(&amp;quot;E-mail: adriano.figueiredo@ufms.br&amp;quot;, style = &amp;quot;color:blue&amp;quot;),
         strong(&amp;quot;Licença Creative Commons - License: CC BY-SA 4.0&amp;quot;, style = &amp;quot;color:brown&amp;quot;),
         h5(&amp;quot;This work is licensed under the Creative Commons Attribution-ShareAlike 4.0 International License.     
            To view a copy of this license, visit&amp;quot;), 
         a(&amp;quot;&amp;lt;http://creativecommons.org/licenses/by-sa/4.0/&amp;gt;&amp;quot;), 
         h5(&amp;quot;or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.&amp;quot;),
         img(src =&amp;quot;https://i.creativecommons.org/l/by-sa/4.0/88x31.png&amp;quot;),
         sliderInput(&amp;quot;year&amp;quot;,
                     &amp;quot;Ano&amp;quot;,
                     min = 1950,
                     max = 2030,
                     step = 5,
                     sep = &amp;quot;&amp;quot;,
                     value = 1950),
         
         sliderInput(&amp;quot;pop_min&amp;quot;,
                      &amp;quot;População Mínima da Aglomeração Urbana (em milhões)&amp;quot;,
                      min = 1,
                      max = 40,
                      value = 10)
      ),
      
      # Mostra o mapa e tabela
      mainPanel(
         # plotOutput(&amp;quot;distPlot&amp;quot;),
         leafletOutput(&amp;quot;map&amp;quot;),
         dataTableOutput(&amp;quot;table&amp;quot;)
      )
   )
)

# Define a logica do server requerido para desenhar o mapa e tabela
server &amp;lt;- function(input, output) {

   
   output$map &amp;lt;- renderLeaflet({
      # urban_agglomerations{spData} é o meu dataset no exemplo
     pop_by_year &amp;lt;- filter(urban_agglomerations, 
                           year == input$year,
                           population_millions &amp;gt; input$pop_min)
     
     leaflet(data = pop_by_year) %&amp;gt;%
       addTiles() %&amp;gt;%
       addMarkers()
   })
   
   output$table &amp;lt;- renderDataTable({
     # urban_agglomerations{spData} é o meu dataset no exemplo
     pop_by_year &amp;lt;- filter(urban_agglomerations, 
                           year == input$year,
                           population_millions &amp;gt; input$pop_min)
     
     pop_by_year
     
   })
}

# Run the application 
shinyApp(ui = ui, server = server)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
