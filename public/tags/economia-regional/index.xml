<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>economia regional | Adriano M R Figueiredo</title>
    <link>/tags/economia-regional/</link>
      <atom:link href="/tags/economia-regional/index.xml" rel="self" type="application/rss+xml" />
    <description>economia regional</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>This work is licensed under the Creative Commons Attribution-ShareAlike 4.0 International License: CC BY-SA 4.0. 2019 Adriano M. R. Figueiredo</copyright><lastBuildDate>Fri, 24 Apr 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/icon-32.png</url>
      <title>economia regional</title>
      <link>/tags/economia-regional/</link>
    </image>
    
    <item>
      <title>Economia Regional em R: Indicadores de análise - $CV$, $V_w$ e $Theil$</title>
      <link>/post/economia-regional-em-r-indicadores-de-analise-cv-v-w-e-theil/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/post/economia-regional-em-r-indicadores-de-analise-cv-v-w-e-theil/</guid>
      <description>


&lt;div id=&#34;Licença&#34; class=&#34;section level1 unnumbered&#34;&gt;
&lt;h1&gt;Licença&lt;/h1&gt;
&lt;p&gt;This work is licensed under the Creative Commons Attribution-ShareAlike 4.0 International License. To view a copy of this license, visit &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34; class=&#34;uri&#34;&gt;http://creativecommons.org/licenses/by-sa/4.0/&lt;/a&gt; or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://mirrors.creativecommons.org/presskit/buttons/88x31/png/by-sa.png&#34; alt=&#34;License: CC BY-SA 4.0&#34; style=&#34;width:25.0%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;License: CC BY-SA 4.0&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;Citação&#34; class=&#34;section level1 unnumbered&#34;&gt;
&lt;h1&gt;Citação&lt;/h1&gt;
&lt;p&gt;Sugestão de citação:
FIGUEIREDO, Adriano Marcos Rodrigues. Economia Regional: &lt;span class=&#34;math inline&#34;&gt;\(CV\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(V_w\)&lt;/span&gt; e &lt;span class=&#34;math inline&#34;&gt;\(Theil\)&lt;/span&gt; em R. Campo Grande-MS,Brasil: RStudio/Rpubs, 2020. Disponível em &lt;a href=&#34;http://rpubs.com/amrofi/regional_indicadores_1&#34; class=&#34;uri&#34;&gt;http://rpubs.com/amrofi/regional_indicadores_1&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;script-para-reprodução&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Script para reprodução&lt;/h1&gt;
&lt;p&gt;(se utilizar, citar como acima)&lt;/p&gt;
&lt;a href=&#34;data:text/x-markdown;base64,&#34; download=&#34;2020-04-24-economia-regional-em-r-indicadores-de-análise-cv-v-w-e-theil.Rmd&#34;&gt;Download 2020-04-24-economia-regional-em-r-indicadores-de-análise-cv-v-w-e-theil.Rmd&lt;/a&gt;
&lt;/div&gt;
&lt;div id=&#34;introdução&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introdução&lt;/h1&gt;
&lt;p&gt;Faremos uma visão panorâmica não exaustiva das medidas utilizadas pela ciência regional, acompanhando o raciocínio de Monastério (2011). Pode-se dividir a análise em indicadores de desigualdade, de especialização, de concentração e de poder de mercado.&lt;/p&gt;
&lt;p&gt;Entre as principais características dos indicadores está a análise de homogeneidade e a investigação dos limites de variação. Neste rol, podemos destacar as Medidas estatísticas de dispersão como o Coeficiente de variação (&lt;span class=&#34;math inline&#34;&gt;\(CV\)&lt;/span&gt;), o Desvio-padrão (&lt;span class=&#34;math inline&#34;&gt;\(dp\)&lt;/span&gt;) e a variância (&lt;span class=&#34;math inline&#34;&gt;\(Var\)&lt;/span&gt;). Outros Índices ponderados para múltiplas variáveis são também possíveis, como aqueles obtidos pela Análise fatorial, ou ainda medidas associadas à Distância econômica (maior ou menor afastamento entre unidades regionais) e os Métodos de agrupamentos (clusters).&lt;/p&gt;
&lt;p&gt;Algumas propriedades são tidas como desejáveis para os indicadores locacionais, de modo a permitir testes de hipóteses. São elas: a comparabilidade entre escalas, geralmente normalizando para o intervalo 0 e 1; os recortes espaciais (agregações na mesma escala tipo municipal ou estadual, por exemplo); e as classificações setoriais (por exemplo, uma classificação tipo CNAE, ou por setor IBGE etc.).&lt;/p&gt;
&lt;p&gt;Os Indicadores sintetizam informações e são o primeiro passo para estudos mais avançados, associando a teoria à prática. Contudo, nenhum indicador regional é suficiente para considerar todos os fenômenos relevantes associados à distribuição da atividade econômica no espaço.&lt;/p&gt;
&lt;p&gt;Atualmente, com as ferramentas computacionais e a disponibilidade de grande volume de dados eletrônicos, surgem softwares livres importantes na análise da ciência regional, como o Python, R e Geoda entre outros. Daremos ênfase nesse artigo ao R. Nesse caso, chamamos atenção para os pacotes: &lt;code&gt;REAT&lt;/code&gt; de Wieland (2019); e &lt;code&gt;EconGeo&lt;/code&gt; de Balland (2019). Esses pacotes realizam uma série de indicadores de análise de dados com localização, mas deve-se atentar para os detalhes de cada pacote, na medida em que formos desenvolvendo os indicadores. Também ressaltamos ao leitor que existem ferramentas que auxiliam a visualização dos resultados, como procedimentos para fazer mapas, ou procedimentos que permitem gráficos mais elaborados. Para tal, recomendamos que o leitor leia Figueiredo (2019; 2020).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;indicadores-de-desigualdade-regional&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Indicadores de Desigualdade Regional&lt;/h1&gt;
&lt;p&gt;O objetivo desses indicadores é ter uma medida do grau de desigualdade regional, usualmente no tocante às suas rendas per capita. A ideia básica deste arquivo é orientar os procedimentos para o cálculo dos indicadores de análise regional a saber:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Coeficiente de variação (&lt;span class=&#34;math inline&#34;&gt;\(CV\)&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;Índice de Jeffrey Gale Williamson (&lt;span class=&#34;math inline&#34;&gt;\(V_w\)&lt;/span&gt;)(&lt;em&gt;Williamson’s population-weighted coefficient of variation&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Índice de Theil (&lt;span class=&#34;math inline&#34;&gt;\(Theil\)&lt;/span&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;div id=&#34;organização-dos-dados&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Organização dos dados&lt;/h2&gt;
&lt;p&gt;Nesta etapa, iniciamos carregando os dados e pacotes, nesse caso, principalmente o pacote &lt;code&gt;REAT&lt;/code&gt;. Neste caso, os dados são dos municípios de Mato Grosso do Sul, de 2002 a 2015. Observar que esse dataset contém dados “ausentes” (&lt;em&gt;missings&lt;/em&gt;) e o pesquisador deverá cuidar destes detalhes antes da análise.&lt;/p&gt;
&lt;p&gt;Os dados estão organizados por colunas para o valor adicionado bruto (VAB) do setor agropecuário (agro), VAB do setor da administração pública (apu), os impostos (imp), VAB do setor da indústria (ind), VAB do setor de serviços (serv), o VAB total (vabt), o PIB -Produto Interno Bruto- (pib), a população municipal (pop), o PIB per capita (pibpc), o &lt;em&gt;share&lt;/em&gt; da população municipal no estado (spop = pop do município/pop do estado), o &lt;em&gt;share&lt;/em&gt; do PIB municipal no estado (y = pib do município/pib do estado), e a produtividade relativa (R=y/spop).&lt;/p&gt;
&lt;p&gt;Os dados foram organizados previamente a partir de dados das contas regionais municipais do IBGE (2020a) (Instituto Brasileiro de Geografia e Estatística) (Tabela 5938 - Produto Interno Bruto dos Municípios) e da informação da população estimada (Tabela 6579) para informação ao TCU (Tribunal de Contas da União) pelo IBGE (2020b). Em virtude das desagregações municipais, os municípios de Figueirão e Paraíso das Águas foram excluídos da análise (sabemos que tal procedimento tem limitações mas em se tratando de um exercício ilustrativo do método, não gerará maiores implicações). Portanto, os dados sem os &lt;em&gt;missings&lt;/em&gt; estão na planilha dados2.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(REAT)
library(readxl)
# help(&amp;#39;REAT&amp;#39;)
dados &amp;lt;- read_excel(&amp;quot;dadospib_popms.xlsx&amp;quot;, sheet = &amp;quot;dados&amp;quot;)
# DT::datatable(dados)

# excluindo as observacoes de Figueirao e Paraiso das Aguas
dados2 &amp;lt;- read_excel(&amp;quot;dadospib_popms.xlsx&amp;quot;, sheet = &amp;quot;dados2&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Separaremos as variáveis a saber: pib, pop, pibpc, R.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pib &amp;lt;- dados2[87:100]
pop &amp;lt;- dados2[101:114]
pibpc &amp;lt;- dados2[115:128]
R &amp;lt;- dados2[157:170]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Estatísticas descritivas das séries de PIB per capita e população.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(pibpc)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;   pibpc2002       pibpc2003       pibpc2004        pibpc2005     
 Min.   : 2684   Min.   : 3227   Min.   :  3096   Min.   :  3580  
 1st Qu.: 4674   1st Qu.: 6540   1st Qu.:  6689   1st Qu.:  6536  
 Median : 6061   Median : 7977   Median :  8296   Median :  8377  
 Mean   : 8159   Mean   :11222   Mean   : 11769   Mean   : 11436  
 3rd Qu.: 8867   3rd Qu.:12046   3rd Qu.: 12039   3rd Qu.: 11619  
 Max.   :66252   Max.   :83192   Max.   :117442   Max.   :128890  
   pibpc2006        pibpc2007       pibpc2008        pibpc2009     
 Min.   :  3744   Min.   : 4427   Min.   :  5084   Min.   :  5251  
 1st Qu.:  7210   1st Qu.: 8264   1st Qu.:  9638   1st Qu.: 10469  
 Median :  9471   Median :10680   Median : 12656   Median : 13661  
 Mean   : 12096   Mean   :13160   Mean   : 15877   Mean   : 16801  
 3rd Qu.: 13372   3rd Qu.:14265   3rd Qu.: 16697   3rd Qu.: 17168  
 Max.   :113228   Max.   :96066   Max.   :135707   Max.   :142556  
   pibpc2010        pibpc2011        pibpc2012        pibpc2013     
 Min.   :  5806   Min.   :  6420   Min.   :  7141   Min.   :  9061  
 1st Qu.: 11675   1st Qu.: 13229   1st Qu.: 14637   1st Qu.: 15072  
 Median : 15522   Median : 17862   Median : 19065   Median : 21462  
 Mean   : 19933   Mean   : 22321   Mean   : 24673   Mean   : 27171  
 3rd Qu.: 20674   3rd Qu.: 23541   3rd Qu.: 25755   3rd Qu.: 27352  
 Max.   :234013   Max.   :212794   Max.   :215305   Max.   :259532  
   pibpc2014        pibpc2015     
 Min.   :  9627   Min.   :  9604  
 1st Qu.: 17162   1st Qu.: 18699  
 Median : 23950   Median : 25860  
 Mean   : 30152   Mean   : 31838  
 3rd Qu.: 31463   3rd Qu.: 33713  
 Max.   :289319   Max.   :246333  &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(pop)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    pop2002          pop2003          pop2004          pop2005      
 Min.   :  3165   Min.   :  2926   Min.   :  2426   Min.   :  2148  
 1st Qu.:  8053   1st Qu.:  8052   1st Qu.:  8050   1st Qu.:  8049  
 Median : 12923   Median : 13180   Median : 13426   Median : 13634  
 Mean   : 27800   Mean   : 28178   Mean   : 28932   Mean   : 29371  
 3rd Qu.: 20488   3rd Qu.: 20675   3rd Qu.: 20519   3rd Qu.: 20426  
 Max.   :692549   Max.   :705975   Max.   :734164   Max.   :749768  
    pop2006          pop2007          pop2008          pop2009      
 Min.   :  1873   Min.   :  3117   Min.   :  3198   Min.   :  3165  
 1st Qu.:  7979   1st Qu.:  8168   1st Qu.:  8401   1st Qu.:  8397  
 Median : 13698   Median : 13979   Median : 14416   Median : 14569  
 Mean   : 29806   Mean   : 29377   Mean   : 30294   Mean   : 30611  
 3rd Qu.: 20789   3rd Qu.: 20916   3rd Qu.: 21546   3rd Qu.: 21677  
 Max.   :765247   Max.   :724524   Max.   :747190   Max.   :755107  
    pop2010          pop2011          pop2012          pop2013      
 Min.   :  3518   Min.   :  3520   Min.   :  3522   Min.   :  3570  
 1st Qu.:  7985   1st Qu.:  7956   1st Qu.:  7972   1st Qu.:  8288  
 Median : 14833   Median : 14972   Median : 15065   Median : 15429  
 Mean   : 31768   Mean   : 32138   Mean   : 32434   Mean   : 33498  
 3rd Qu.: 22341   3rd Qu.: 22621   3rd Qu.: 23016   3rd Qu.: 23888  
 Max.   :786797   Max.   :796252   Max.   :805397   Max.   :832352  
    pop2014          pop2015      
 Min.   :  3570   Min.   :  3570  
 1st Qu.:  8429   1st Qu.:  8567  
 Median : 15534   Median : 15637  
 Mean   : 33917   Mean   : 34326  
 3rd Qu.: 24078   3rd Qu.: 24414  
 Max.   :843120   Max.   :853622  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Na próxima seção, faremos os indicadores de análise.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;coeficiente-de-variação-cv&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Coeficiente de variação (&lt;span class=&#34;math inline&#34;&gt;\(CV\)&lt;/span&gt;)&lt;/h2&gt;
&lt;p&gt;O &lt;span class=&#34;math inline&#34;&gt;\(CV\)&lt;/span&gt; permite resumir as disparidades regionais (ex: no PIB regional per capita) em um indicador. Neste caso, o &lt;span class=&#34;math inline&#34;&gt;\(CV\)&lt;/span&gt; não está ponderado pela população e pode ser padronizado para ficar entre 0 e 1.&lt;/p&gt;
&lt;p&gt;No exemplo a seguir, não está padronizado. Veja a fórmula para cálculo do CV.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
CV = \frac{{\sqrt {\left( {\frac{1}{{T - 1}}} \right){{\sum\limits_i {\left( {{y_i} - \mu } \right)} }^2}} }}{\mu }
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Na fórmula de &lt;span class=&#34;math inline&#34;&gt;\(CV\)&lt;/span&gt;, para a variável em análise, neste exemplo, &lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt; é o PIB per capita do município &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;; &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; é o PIB per capita do estado; e, T é o número de municípios analisados. Portanto, o coeficiente de variação &lt;span class=&#34;math inline&#34;&gt;\(CV\)&lt;/span&gt; é o quociente do desvio padrão dividido pela média, e servirá para analisar as disparidades na variável de análise, neste caso, o PIB per capita municipal.&lt;/p&gt;
&lt;p&gt;O coeficiente de variação, &lt;span class=&#34;math inline&#34;&gt;\(CV\)&lt;/span&gt;, é uma medida estatística de dispersão, baseada na variância e no desvio-padrão. Desta forma, na análise regional, dá uma ideia de convergência absoluta (ou σ-convergência) em casos de pequena variação no tempo ou no espaço. A redução da dispersão pode ser oriunda de crescimento mais acelerado das localidades mais pobres relativamente àquelas mais ricas, conforme as teorias de convergência de renda.&lt;/p&gt;
&lt;p&gt;A expressão tradicional trata o dataset como uma amostra, e por este motivo o denominador da variância é T-1. Se for o universo, então pode-se especificar &lt;code&gt;is.sample = FALSE&lt;/code&gt; e a rotina de &lt;code&gt;cv&lt;/code&gt; tratará a informação com o denominador igual a T na variância.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;attach(pibpc)
# calculo para o PIB per capita para um ano
CVMS.2015 &amp;lt;- cv(pibpc2015, is.sample = FALSE, coefnorm = FALSE, weighting = NULL, 
    wmean = FALSE, na.rm = FALSE)
cat(&amp;quot;CVMS.2015 = &amp;quot;, CVMS.2015)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;CVMS.2015 =  0.8847709&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Calculo para o PIB per capita de 2002-2015 e plot
cvs.pibpc &amp;lt;- apply(pibpc, MARGIN = 2, FUN = cv)
cat(&amp;quot;máximo de cvs.pibpc = &amp;quot;, max(cvs.pibpc))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;máximo de cvs.pibpc =  1.290541&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# [1] 1.290541
cat(&amp;quot;mínimo de cvs.pibpc = &amp;quot;, min(cvs.pibpc))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;mínimo de cvs.pibpc =  0.840226&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# [1] 0.840226 Calculo do cv para 2002-2015
anos &amp;lt;- 2002:2015

# Plot cv no tempo
plot(anos, cvs.pibpc, &amp;quot;l&amp;quot;, ylim = c(0.84, 1.3), xlab = &amp;quot;Ano&amp;quot;, ylab = &amp;quot;CV do PIB per capita&amp;quot;, 
    main = &amp;quot;CV dos PIB per capita municipais de MS, 2002-2015&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-24-economia-regional-em-r-indicadores-de-análise-cv-v-w-e-theil_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;cv-com-normalização&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;span class=&#34;math inline&#34;&gt;\(CV\)&lt;/span&gt; com normalização&lt;/h3&gt;
&lt;p&gt;Agora refazendo o &lt;span class=&#34;math inline&#34;&gt;\(CV\)&lt;/span&gt; do PIB com normalização (&lt;span class=&#34;math inline&#34;&gt;\(0 \le CV \le 1\)&lt;/span&gt;). Neste caso, observe que aplicamos a opção &lt;code&gt;coefnorm = TRUE&lt;/code&gt; na função &lt;code&gt;cv&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Calculo de CV normalizado para o PIB per capita de 2002-2015 e plot
cvsn.pibpc &amp;lt;- apply(pibpc, MARGIN = 2, FUN = cv, coefnorm = TRUE)
max(cvsn.pibpc)  # [1] 0.1480351&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 0.1480351&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;min(cvsn.pibpc)  # [1] 0.09638054&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 0.09638054&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;anos &amp;lt;- 2002:2015

# Plot cv no tempo
plot(anos, cvsn.pibpc, &amp;quot;l&amp;quot;, ylim = c(0.09, 0.15), xlab = &amp;quot;Ano&amp;quot;, ylab = &amp;quot;CV do PIB&amp;quot;, 
    main = &amp;quot;CV normalizado dos PIBs per capita municipais de MS, 2002-2015&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-24-economia-regional-em-r-indicadores-de-análise-cv-v-w-e-theil_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;resultado.cv &amp;lt;- as.data.frame(cbind(anos, cvs.pibpc, cvsn.pibpc))
knitr::kable(resultado.cv, caption = &amp;quot;CV e CV normalizado dos PIBs per capita municipais de MS, 2002-2015&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;caption&gt;&lt;span id=&#34;tab:unnamed-chunk-7&#34;&gt;Table 1: &lt;/span&gt;CV e CV normalizado dos PIBs per capita municipais de MS, 2002-2015&lt;/caption&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;anos&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;cvs.pibpc&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;cvsn.pibpc&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;pibpc2002&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2002&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9560380&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.1096651&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;pibpc2003&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2003&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9202166&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.1055561&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;pibpc2004&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2004&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.1430126&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.1311125&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;pibpc2005&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2005&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.2614146&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.1446942&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;pibpc2006&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2006&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0454319&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.1199193&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;pibpc2007&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2007&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8402260&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0963805&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;pibpc2008&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2008&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9630817&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.1104731&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;pibpc2009&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2009&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9616951&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.1103140&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;pibpc2010&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2010&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.2905405&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.1480351&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;pibpc2011&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2011&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0683170&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.1225444&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;pibpc2012&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2012&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9912437&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.1137034&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;pibpc2013&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2013&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0696527&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.1226976&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;pibpc2014&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2014&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0765816&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.1234924&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;pibpc2015&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2015&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8905727&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.1021557&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;índice-de-williamson-v_w&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Índice de Williamson (&lt;span class=&#34;math inline&#34;&gt;\(V_w\)&lt;/span&gt;)&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Williamson’s population-weighted coefficient of variation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;O índice &lt;span class=&#34;math inline&#34;&gt;\(V_w\)&lt;/span&gt; é um coeficiente de variação ponderado pela parcela da população em cada região. Para a equação de Williamson (1965), para a população &lt;span class=&#34;math inline&#34;&gt;\(p_i\)&lt;/span&gt; da região &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; e população do estado &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;. O valor de &lt;span class=&#34;math inline&#34;&gt;\(V_w\)&lt;/span&gt; será 0 (zero) para não existência de desigualdades do PIB per capita (&lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt;). A ponderação pela população faz com que o indicador fique melhor que o &lt;span class=&#34;math inline&#34;&gt;\(CV\)&lt;/span&gt; quando houver regiões com pequenas populações junto a outras de grandes populações. A fórmula é como abaixo:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
Vw = \frac{{\sqrt {{{\sum\limits_i {\left( {{y_i} - \mu } \right)} }^2}\left( {\frac{p_i}{{N}}} \right)} }}{\mu }
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Similarmente ao CV, primeiro calculou-se o Vw para um ano e sem normalizar, depois para os vários anos e com normalização. O comando é o mesmo do CV (&lt;code&gt;cv&lt;/code&gt;), do pacote &lt;code&gt;REAT&lt;/code&gt;, mas especificando a ponderação em &lt;code&gt;weighting = pop&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# para um ano específico, 2002, para a variável pibpc:
attach(pibpc)
attach(pop)
VwMS.2002 &amp;lt;- cv(pibpc2002, coefnorm = FALSE, weighting = pop2002, wmean = FALSE, 
    na.rm = FALSE)
VwMS.2002&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 0.5933009&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# para um ano específico, 2015, para a variável pibpc:
VwMS.2015 &amp;lt;- cv(pibpc2015, coefnorm = FALSE, weighting = pop2015, wmean = FALSE, 
    na.rm = FALSE)
VwMS.2015&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 0.5262813&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Agora para os vários anos, não padronizando e peso pop farei um a um
Vw.ms &amp;lt;- data.frame(matrix(0, nrow = length(pibpc), ncol = 1))
Vw &amp;lt;- cv(pibpc2002, coefnorm = FALSE, weighting = pop2002)
Vw.ms[1, 1] &amp;lt;- Vw
Vw &amp;lt;- cv(pibpc2003, coefnorm = FALSE, weighting = pop2003)
Vw.ms[2, 1] &amp;lt;- Vw
Vw &amp;lt;- cv(pibpc2004, coefnorm = FALSE, weighting = pop2004)
Vw.ms[3, 1] &amp;lt;- Vw
Vw &amp;lt;- cv(pibpc2005, coefnorm = FALSE, weighting = pop2005)
Vw.ms[4, 1] &amp;lt;- Vw
Vw &amp;lt;- cv(pibpc2006, coefnorm = FALSE, weighting = pop2006)
Vw.ms[5, 1] &amp;lt;- Vw
Vw &amp;lt;- cv(pibpc2007, coefnorm = FALSE, weighting = pop2007)
Vw.ms[6, 1] &amp;lt;- Vw
Vw &amp;lt;- cv(pibpc2008, coefnorm = FALSE, weighting = pop2008)
Vw.ms[7, 1] &amp;lt;- Vw
Vw &amp;lt;- cv(pibpc2009, coefnorm = FALSE, weighting = pop2009)
Vw.ms[8, 1] &amp;lt;- Vw
Vw &amp;lt;- cv(pibpc2010, coefnorm = FALSE, weighting = pop2010)
Vw.ms[9, 1] &amp;lt;- Vw
Vw &amp;lt;- cv(pibpc2011, coefnorm = FALSE, weighting = pop2011)
Vw.ms[10, 1] &amp;lt;- Vw
Vw &amp;lt;- cv(pibpc2012, coefnorm = FALSE, weighting = pop2012)
Vw.ms[11, 1] &amp;lt;- Vw
Vw &amp;lt;- cv(pibpc2013, coefnorm = FALSE, weighting = pop2013)
Vw.ms[12, 1] &amp;lt;- Vw
Vw &amp;lt;- cv(pibpc2014, coefnorm = FALSE, weighting = pop2014)
Vw.ms[13, 1] &amp;lt;- Vw
Vw &amp;lt;- cv(pibpc2015, coefnorm = FALSE, weighting = pop2015)
Vw.ms[14, 1] &amp;lt;- Vw

anos &amp;lt;- 2002:2015

# Plot Vw no tempo
plot(anos, Vw.ms[, 1], &amp;quot;l&amp;quot;, xlab = &amp;quot;Ano&amp;quot;, ylab = &amp;quot;Vw do PIB per capita&amp;quot;, main = &amp;quot;Vw dos PIBs municipais per capita de MS, 2002-2015&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-24-economia-regional-em-r-indicadores-de-análise-cv-v-w-e-theil_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;resultado.vw &amp;lt;- as.data.frame(Vw.ms)
rownames(resultado.vw) &amp;lt;- anos
colnames(resultado.vw) &amp;lt;- c(&amp;quot;Vw&amp;quot;)
knitr::kable(resultado.vw, caption = &amp;quot;Vw dos PIBs per capita municipais de MS, 2002-2015&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;caption&gt;&lt;span id=&#34;tab:unnamed-chunk-9&#34;&gt;Table 2: &lt;/span&gt;Vw dos PIBs per capita municipais de MS, 2002-2015&lt;/caption&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Vw&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2002&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5933009&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2003&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6347428&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2004&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7059526&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2005&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6996030&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2006&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5732573&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2007&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4771571&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2008&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5311643&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2009&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5368265&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6589234&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2011&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5548406&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5344519&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5845273&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2014&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5708930&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5262813&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Os valores normalizados devem estar entre 0 e 1. Assim, farei a normalização, calculando agora para os vários anos, padronizando e usando o peso (weighting = pop). Farei ano a ano.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Vwn.ms &amp;lt;- data.frame(matrix(0, nrow = length(pibpc), ncol = 1))
Vwn &amp;lt;- cv(pibpc2002, coefnorm = TRUE, weighting = pop2002, wmean = TRUE)
Vwn.ms[1, 1] &amp;lt;- Vwn
Vwn &amp;lt;- cv(pibpc2003, coefnorm = TRUE, weighting = pop2003, wmean = TRUE)
Vwn.ms[2, 1] &amp;lt;- Vwn
Vwn &amp;lt;- cv(pibpc2004, coefnorm = TRUE, weighting = pop2004, wmean = TRUE)
Vwn.ms[3, 1] &amp;lt;- Vwn
Vwn &amp;lt;- cv(pibpc2005, coefnorm = TRUE, weighting = pop2005, wmean = TRUE)
Vwn.ms[4, 1] &amp;lt;- Vwn
Vwn &amp;lt;- cv(pibpc2006, coefnorm = TRUE, weighting = pop2006, wmean = TRUE)
Vwn.ms[5, 1] &amp;lt;- Vwn
Vwn &amp;lt;- cv(pibpc2007, coefnorm = TRUE, weighting = pop2007, wmean = TRUE)
Vwn.ms[6, 1] &amp;lt;- Vwn
Vwn &amp;lt;- cv(pibpc2008, coefnorm = TRUE, weighting = pop2008, wmean = TRUE)
Vwn.ms[7, 1] &amp;lt;- Vwn
Vwn &amp;lt;- cv(pibpc2009, coefnorm = TRUE, weighting = pop2009, wmean = TRUE)
Vwn.ms[8, 1] &amp;lt;- Vwn
Vwn &amp;lt;- cv(pibpc2010, coefnorm = TRUE, weighting = pop2010, wmean = TRUE)
Vwn.ms[9, 1] &amp;lt;- Vwn
Vwn &amp;lt;- cv(pibpc2011, coefnorm = TRUE, weighting = pop2011, wmean = TRUE)
Vwn.ms[10, 1] &amp;lt;- Vwn
Vwn &amp;lt;- cv(pibpc2012, coefnorm = TRUE, weighting = pop2012, wmean = TRUE)
Vwn.ms[11, 1] &amp;lt;- Vwn
Vwn &amp;lt;- cv(pibpc2013, coefnorm = TRUE, weighting = pop2013, wmean = TRUE)
Vwn.ms[12, 1] &amp;lt;- Vwn
Vwn &amp;lt;- cv(pibpc2014, coefnorm = TRUE, weighting = pop2014, wmean = TRUE)
Vwn.ms[13, 1] &amp;lt;- Vwn
Vwn &amp;lt;- cv(pibpc2015, coefnorm = TRUE, weighting = pop2015, wmean = TRUE)
Vwn.ms[14, 1] &amp;lt;- Vwn

anos &amp;lt;- 2002:2015

# Plot Vw no tempo
plot(anos, Vwn.ms[, 1], &amp;quot;l&amp;quot;, xlab = &amp;quot;Ano&amp;quot;, ylab = &amp;quot;Vw normalizado do PIB per capita&amp;quot;, 
    main = &amp;quot;Vw normalizado dos PIBs municipais per capita de MS, 2002-2015&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-24-economia-regional-em-r-indicadores-de-análise-cv-v-w-e-theil_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;resultado.vwn &amp;lt;- as.data.frame(Vwn.ms)
rownames(resultado.vwn) &amp;lt;- anos
colnames(resultado.vwn) &amp;lt;- c(&amp;quot;Vwn&amp;quot;)
knitr::kable(resultado.vwn, caption = &amp;quot;Vw normalizado dos PIBs per capita municipais de MS, 2002-2015&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;caption&gt;&lt;span id=&#34;tab:unnamed-chunk-10&#34;&gt;Table 3: &lt;/span&gt;Vw normalizado dos PIBs per capita municipais de MS, 2002-2015&lt;/caption&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Vwn&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2002&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0676796&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2003&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0716157&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2004&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0797638&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2005&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0795561&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2006&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0655780&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2007&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0547231&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2008&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0608683&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2009&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0615771&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0754911&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2011&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0636437&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0613026&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0670189&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2014&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0654852&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0603280&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;No caso normalizado, observam-se valores próximos a zero, indicando pequena variabilidade entre os municípios. Embora existam discrepâncias, o que pode ser detectado olhando estatísticas descritivas da série, percebe-se que a variabilidade entre os anos é muito pequena, não podendo dizer que são valores diferentes da média do período.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;índice-de-theil&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Índice de Theil&lt;/h2&gt;
&lt;p&gt;Este índice é comumento utilizado para avaliar a desigualdade entre extratos de renda ou, como aqui, entre localidades. A expressão básica é como abaixo.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
J = \sum\limits_r {\left( {\left( {\frac{{{p_r}}}{N}} \right)\ln \left( {\frac{{\frac{{{p_r}}}{N}}}{{\frac{{{Y_r}}}{Y}}}} \right)} \right)} 
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;A expressão é a mesma do original de Theil et al (1996, p.12-13) e, neste caso: &lt;span class=&#34;math inline&#34;&gt;\(p_r\)&lt;/span&gt; é a população da localidade de análise &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt;; &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; é a população da localidade de referência; &lt;span class=&#34;math inline&#34;&gt;\(Y_r\)&lt;/span&gt; é o PIB per capita da localidade de análise &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt;; e &lt;span class=&#34;math inline&#34;&gt;\(Y\)&lt;/span&gt; é o PIB per capita da localidade de referência. No presente exemplo, a localidade de análise é o município e a de referência é o estado de MS.&lt;/p&gt;
&lt;p&gt;Foi elaborada uma função para reproduzir essa expressão. Esclarecemos que o leitor deve ter cautela pois encontram-se outras expressões atribuídas como o índice de Theil, mas com rotinas que dão outros resultados, como por exemplo o da função &lt;code&gt;REAT:::theil&lt;/code&gt;.
A rotina da função utilizada (que nomeamos como &lt;code&gt;theil.mon&lt;/code&gt;) é:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;theil.mon &amp;lt;- function(x, y) {
    x_sum &amp;lt;- sum(x)
    y_sum &amp;lt;- sum(y)
    ln_sum &amp;lt;- log((y/y_sum)/(x/x_sum))
    J &amp;lt;- sum((y/y_sum) * ln_sum)
    return(J)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# x é o PIB per capita e y é a população
attach(pibpc)
attach(pop)
Theil.ms &amp;lt;- data.frame(matrix(0, nrow = 14, ncol = 1))
Theil &amp;lt;- theil.mon(pibpc2002, pop2002)
Theil.ms[1, 1] &amp;lt;- Theil
Theil &amp;lt;- theil.mon(pibpc2003, pop2003)
Theil.ms[2, 1] &amp;lt;- Theil
Theil &amp;lt;- theil.mon(pibpc2004, pop2004)
Theil.ms[3, 1] &amp;lt;- Theil
Theil &amp;lt;- theil.mon(pibpc2005, pop2005)
Theil.ms[4, 1] &amp;lt;- Theil
Theil &amp;lt;- theil.mon(pibpc2006, pop2006)
Theil.ms[5, 1] &amp;lt;- Theil
Theil &amp;lt;- theil.mon(pibpc2007, pop2007)
Theil.ms[6, 1] &amp;lt;- Theil
Theil &amp;lt;- theil.mon(pibpc2008, pop2008)
Theil.ms[7, 1] &amp;lt;- Theil
Theil &amp;lt;- theil.mon(pibpc2009, pop2009)
Theil.ms[8, 1] &amp;lt;- Theil
Theil &amp;lt;- theil.mon(pibpc2010, pop2010)
Theil.ms[9, 1] &amp;lt;- Theil
Theil &amp;lt;- theil.mon(pibpc2011, pop2011)
Theil.ms[10, 1] &amp;lt;- Theil
Theil &amp;lt;- theil.mon(pibpc2012, pop2012)
Theil.ms[11, 1] &amp;lt;- Theil
Theil &amp;lt;- theil.mon(pibpc2013, pop2013)
Theil.ms[12, 1] &amp;lt;- Theil
Theil &amp;lt;- theil.mon(pibpc2014, pop2014)
Theil.ms[13, 1] &amp;lt;- Theil
Theil &amp;lt;- theil.mon(pibpc2015, pop2015)

Theil.ms[14, 1] &amp;lt;- Theil
resultado.Theil.ms &amp;lt;- as.data.frame(Theil.ms)
rownames(resultado.Theil.ms) &amp;lt;- anos
colnames(resultado.Theil.ms) &amp;lt;- c(&amp;quot;Theil.ms&amp;quot;)
knitr::kable(resultado.Theil.ms, caption = &amp;quot;Theil dos PIBs per capita municipais de MS, 2002-2015&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;caption&gt;&lt;span id=&#34;tab:unnamed-chunk-12&#34;&gt;Table 4: &lt;/span&gt;Theil dos PIBs per capita municipais de MS, 2002-2015&lt;/caption&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Theil.ms&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2002&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.226690&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2003&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.298645&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2004&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.318063&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2005&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.284984&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2006&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.236851&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2007&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.129439&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2008&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.164039&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2009&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.150615&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2010&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.192650&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2011&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.161273&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2012&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.162129&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2013&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.191325&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;2014&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.175276&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;2015&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.193903&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Plot Theil (Monasterio) no tempo
plot(anos, Theil.ms[, 1], &amp;quot;l&amp;quot;, xlab = &amp;quot;Ano&amp;quot;, ylab = &amp;quot;Theil do PIB per capita&amp;quot;, main = &amp;quot;Theil dos PIBs municipais per capita de MS, 2002-2015&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-24-economia-regional-em-r-indicadores-de-análise-cv-v-w-e-theil_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;É possível ver que a desigualdade reduziu entre os municípios até 2007, aumentados nos anos seguintes.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;Referências&#34; class=&#34;section level1 unnumbered&#34;&gt;
&lt;h1&gt;Referências&lt;/h1&gt;
&lt;p&gt;BALASSA, B. Trade Liberalization and Revealed Comparative Advantage, The Manchester School 33: 99-123. 1965.&lt;/p&gt;
&lt;p&gt;BALLAND, P.A. Economic Geography in R: Introduction to the EconGeo Package, Papers in Evolutionary Economic Geography, 17 (09): 1-75, 2017.&lt;/p&gt;
&lt;p&gt;BALLAND, Pierre-Alexandre. EconGeo: Computing Key Indicators of the Spatial Distribution of Economic Activities. R package version 1.3. 2019. Disponível em : &lt;a href=&#34;https://github.com/PABalland/EconGeo&#34; class=&#34;uri&#34;&gt;https://github.com/PABalland/EconGeo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;COUTINHO, Márcio R. A contribuição das atividades econômicas de base agropecuária na geração de emprego e massa salarial para os municípios de Mato Grosso do Sul. Dissertação de Mestrado (Administração). Campo Grande: UFMS, 2017. p.32-42.&lt;/p&gt;
&lt;p&gt;FIGUEIREDO, Adriano Marcos Rodrigues. Economia Regional: Mapas em R. Campo Grande-MS,Brasil: RStudio/Rpubs, 2019a. Disponível em: &lt;a href=&#34;http://rpubs.com/amrofi/Regional_Economics_Spatial&#34; class=&#34;uri&#34;&gt;http://rpubs.com/amrofi/Regional_Economics_Spatial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;FIGUEIREDO, Adriano Marcos Rodrigues. Apêndice - instalação do RStudio. Campo Grande-MS,Brasil: RStudio/Rpubs, 2019b. Disponível em: &lt;a href=&#34;http://rpubs.com/amrofi/instrucoes_Rstudio&#34; class=&#34;uri&#34;&gt;http://rpubs.com/amrofi/instrucoes_Rstudio&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;FIGUEIREDO, Adriano Marcos Rodrigues. Mapas em R com &lt;code&gt;geobr&lt;/code&gt;. Campo Grande-MS,Brasil: RStudio/Rpubs, 2020. Disponível em: &lt;a href=&#34;http://rpubs.com/amrofi/maps_geobr&#34; class=&#34;uri&#34;&gt;http://rpubs.com/amrofi/maps_geobr&lt;/a&gt; e &lt;a href=&#34;https://adrianofigueiredo.netlify.com/post/mapas-em-r-com-geobr/&#34; class=&#34;uri&#34;&gt;https://adrianofigueiredo.netlify.com/post/mapas-em-r-com-geobr/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;IBGE - Instituto Brasileiro de Geografia e Estatística. Produto Interno Bruto dos Municípios. Rio de Janeiro: IBGE/SIDRA. 2020a. Disponível em:&lt;a href=&#34;https://sidra.ibge.gov.br/pesquisa/pib-munic/tabelas&#34; class=&#34;uri&#34;&gt;https://sidra.ibge.gov.br/pesquisa/pib-munic/tabelas&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;IBGE - Instituto Brasileiro de Geografia e Estatística. Estimativas de população. Rio de Janeiro: IBGE/SIDRA. 2020b. Disponível em: &lt;a href=&#34;https://www.ibge.gov.br/estatisticas/sociais/populacao/9103-estimativas-de-populacao.html?=&amp;amp;t=downloads&#34; class=&#34;uri&#34;&gt;https://www.ibge.gov.br/estatisticas/sociais/populacao/9103-estimativas-de-populacao.html?=&amp;amp;t=downloads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MONASTERIO, Leonardo. Indicadores de análise regional e espacial. In: CRUZ et al (orgs). Economia regional e urbana : teorias e métodos com ênfase no Brasil. Brasília: Ipea, 2011. cap. 10. pp.315-331.&lt;/p&gt;
&lt;p&gt;WIELAND, T. REAT: A Regional Economic Analysis Toolbox for R. REGION, 6(3), R1-R57. 2019. Disponível em: &lt;a href=&#34;https://doi.org/10.18335/region.v6i3.267&#34; class=&#34;uri&#34;&gt;https://doi.org/10.18335/region.v6i3.267&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Mapas em R com `geobr`</title>
      <link>/post/mapas-em-r-com-geobr/</link>
      <pubDate>Fri, 31 Jan 2020 00:00:00 +0000</pubDate>
      <guid>/post/mapas-em-r-com-geobr/</guid>
      <description>


&lt;div id=&#34;Licença&#34; class=&#34;section level1 unnumbered&#34;&gt;
&lt;h1&gt;Licença&lt;/h1&gt;
&lt;p&gt;This work is licensed under the Creative Commons Attribution-ShareAlike 4.0 International License. To view a copy of this license, visit &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34; class=&#34;uri&#34;&gt;http://creativecommons.org/licenses/by-sa/4.0/&lt;/a&gt; or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://mirrors.creativecommons.org/presskit/buttons/88x31/png/by-sa.png&#34; alt=&#34;License: CC BY-SA 4.0&#34; style=&#34;width:25.0%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;License: CC BY-SA 4.0&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;As ideias aqui expressas são de responsabilidade exclusiva do autor, e não representam as opiniões da instituição a que pertence.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;Citação&#34; class=&#34;section level1 unnumbered&#34;&gt;
&lt;h1&gt;Citação&lt;/h1&gt;
&lt;p&gt;Sugestão para citação:
FIGUEIREDO, Adriano Marcos Rodrigues. Mapas em R com &lt;code&gt;geobr&lt;/code&gt;. Campo Grande-MS,Brasil: RStudio/Rpubs, 2020. Disponível em &lt;a href=&#34;http://rpubs.com/amrofi/maps_geobr&#34; class=&#34;uri&#34;&gt;http://rpubs.com/amrofi/maps_geobr&lt;/a&gt; e &lt;a href=&#34;https://adrianofigueiredo.netlify.com/post/mapas-em-r-com-geobr/&#34; class=&#34;uri&#34;&gt;https://adrianofigueiredo.netlify.com/post/mapas-em-r-com-geobr/&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;script-para-reprodução-se-utilizar-citar-como-acima&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Script para reprodução (se utilizar, citar como acima)&lt;/h1&gt;
&lt;a href=&#34;data:text/x-markdown;base64,LS0tDQp0aXRsZTogJ01hcGFzIGVtIFIgY29tIGBnZW9icmAnDQphdXRob3I6ICJBZHJpYW5vIE0gUiBGaWd1ZWlyZWRvIg0KZGF0ZTogJzIwMjAtMDEtMzEnDQpzbHVnOiBtYXBhcy1lbS1yLWNvbS1nZW9icg0KY2F0ZWdvcmllczogW10NCnRhZ3M6DQogIC0gZWNvbm9taWEgcmVnaW9uYWwNCiAgLSBtYXBhcw0KICAtIGdncGxvdDINCnN1YnRpdGxlOiAnJw0Kc3VtbWFyeTogJ0NyaWFuZG8gbWFwYXMgZG8gSURITSBkZSBNYXRvIEdyb3NzbyBkbyBTdWwgY29tIG9zIHBhY290ZXMgYGdncGxvdDJgIGUgYGdlb2JyYC4nDQpsYXN0bW9kOiAnMjAyMC0wMS0zMVQwODozMDowNy0wNDowMCcNCmZlYXR1cmVkOiBubw0KaW1hZ2U6DQogIGNhcHRpb246ICcnDQogIGZvY2FsX3BvaW50OiAnJw0KICBwcmV2aWV3X29ubHk6IG5vDQpwcm9qZWN0czogW10NCi0tLQ0KDQpMaWNlbsOnYSB7LSNMaWNlbsOnYX0NCj09PT09PT09PT09PT09PT09PT0NCg0KVGhpcyB3b3JrIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBDcmVhdGl2ZSBDb21tb25zIEF0dHJpYnV0aW9uLVNoYXJlQWxpa2UgNC4wIEludGVybmF0aW9uYWwgTGljZW5zZS4gVG8gdmlldyBhIGNvcHkgb2YgdGhpcyBsaWNlbnNlLCB2aXNpdCA8aHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktc2EvNC4wLz4gb3Igc2VuZCBhIGxldHRlciB0byBDcmVhdGl2ZSBDb21tb25zLCBQTyBCb3ggMTg2NiwgTW91bnRhaW4gVmlldywgQ0EgOTQwNDIsIFVTQS4NCg0KIVtMaWNlbnNlOiBDQyBCWS1TQSA0LjBdKGh0dHBzOi8vbWlycm9ycy5jcmVhdGl2ZWNvbW1vbnMub3JnL3ByZXNza2l0L2J1dHRvbnMvODh4MzEvcG5nL2J5LXNhLnBuZyl7IHdpZHRoPTI1JSB9DQoNCkFzIGlkZWlhcyBhcXVpIGV4cHJlc3NhcyBzw6NvIGRlIHJlc3BvbnNhYmlsaWRhZGUgZXhjbHVzaXZhIGRvIGF1dG9yLCBlIG7Do28gcmVwcmVzZW50YW0gYXMgb3BpbmnDtWVzIGRhIGluc3RpdHVpw6fDo28gYSBxdWUgcGVydGVuY2UuDQoNCmBgYHtyIHNldHVwLCBpbmNsdWRlPUZBTFNFfQ0Ka25pdHI6Om9wdHNfY2h1bmskc2V0KGVjaG8gPSBUUlVFKQ0KYGBgDQoNCkNpdGHDp8OjbyB7LSNDaXRhw6fDo299DQo9PT09PT09PT09PT09PT09PT09DQoNClN1Z2VzdMOjbyBwYXJhIGNpdGHDp8OjbzogDQpGSUdVRUlSRURPLCBBZHJpYW5vIE1hcmNvcyBSb2RyaWd1ZXMuIE1hcGFzIGVtIFIgY29tIGBnZW9icmAuIENhbXBvIEdyYW5kZS1NUyxCcmFzaWw6IFJTdHVkaW8vUnB1YnMsIDIwMjAuIERpc3BvbsOtdmVsIGVtIDxodHRwOi8vcnB1YnMuY29tL2Ftcm9maS9tYXBzX2dlb2JyPiBlIDxodHRwczovL2Fkcmlhbm9maWd1ZWlyZWRvLm5ldGxpZnkuY29tL3Bvc3QvbWFwYXMtZW0tci1jb20tZ2VvYnIvPi4gDQoNClNjcmlwdCBwYXJhIHJlcHJvZHXDp8OjbyAoc2UgdXRpbGl6YXIsIGNpdGFyIGNvbW8gYWNpbWEpDQo9PT09PT09PT09PT09PT09PT0NCg0KYGBge3IgZWNobz1GQUxTRX0NCiMgYSBzaW5nbGUgZmlsZQ0KeGZ1bjo6ZW1iZWRfZmlsZSgnMjAyMC0wMS0zMS1tYXBhcy1lbS1yLWNvbS1nZW9ici5SbWQnKQ0KYGBgDQoNCkludHJvZHXDp8OjbyANCj09PT09PT09PT09PT09PT09PQ0KDQpQYXJhIHJlYWxpemFyIHNldSBtYXBhIGVtIFIsIGluaWNpYWxtZW50ZSBvIGxlaXRvciBkZXZlIGJhaXhhciBvcyBwcm9ncmFtYXMgZSBwYWNvdGVzIG5lY2Vzc8OhcmlvcyBhbyBwcm9qZXRvLiBOZXN0ZSBjYXNvLCBzdWdlcmUtc2UgcXVlIHV0aWxpemUgbyBSU3R1ZGlvIGUgbyBSIGF0dWFsaXphZG9zLCBhIHBhcnRpciBkZTogaHR0cDovL2NyYW4uci1wcm9qZWN0Lm9yZy9iaW4vd2luZG93cy9iYXNlLyBlIGh0dHBzOi8vd3d3LnJzdHVkaW8uY29tL3Byb2R1Y3RzL3JzdHVkaW8vZG93bmxvYWQzLy4gUXVhbmRvIGVzdGEgcmV2aXPDo28gZm9pIGZlaXRhLCBhIHZlcnPDo28gZG8gUlN0dWRpbyBlcmEgYSAqUlN0dWRpbyBEZXNrdG9wIDEuMi41MDMzKiBlIGRvICpSLTMuNi4xIGZvciBXaW5kb3dzICgzMi82NCBiaXQpKi4gDQoNClByaW1laXJvIGluc3RhbGUgbyBSIGUgcG9zdGVyaW9ybWVudGUgbyBSU3R1ZGlvLCBkZSBtb2RvIHF1ZSBvIHNlZ3VuZG8gcmVjb25oZcOnYSBhdXRvbWF0aWNhbWVudGUgbyBwcmltZWlyby4gU2UgdHVkbyBlc3RpdmVyIHBlcmZlaXRvLCBhIHRlbGEgaW5pY2lhbCBkbyBSU3R1ZGlvIG1vc3RyYXLDoSBjb3JyZXRhbWVudGUgYSB2ZXJzw6NvIGRvIFIuDQoNCg0KTWFwYXMgZW0gUg0KPT09PT09PT09PT09PT09PT09DQoNCkFnb3JhIGEgbWV0YSDDqSBnZXJhciB1bSBtYXBhIHNpbXBsZXMgZW0gUi4gUGFyYSB0YW50bywgcHJpbWVpcm8gZGVmaW5lLXNlIGEgbWFsaGEgbXVuaWNpcGFsIGRlc2VqYWRhLiBQYXJhIG8gcHJlc2VudGUgY2FzbywgdXRpbGl6YW0tc2UgYXMgbWFsaGFzIGRpZ2l0YWlzIGRvIHBhY290ZSBgZ2VvYnJgLiAgICAgDQoNCk9zIHBhY290ZXMgKHByZXZpYW1lbnRlIGluc3RhbGFkb3MpIHPDo28gYXF1aSBjYXJyZWdhZG9zOg0KDQpgYGB7ciBlY2hvID0gVCwgcmVzdWx0cyA9ICdoaWRlJywsIHdhcm5pbmdzPUZBTFNFfQ0KbGlicmFyeShnZW9icikNCmxpYnJhcnkoZ2dwbG90MikNCmxpYnJhcnkoc2YpDQpsaWJyYXJ5KGRwbHlyKQ0KbGlicmFyeShyaW8pDQpsaWJyYXJ5KHJlYWRyKQ0KYGBgDQoNCk8gcGFjb3RlIGBnZW9icmAgdGVtIGFzIHJvdGluYXMgcGFyYSBvIGRvd25sb2FkIGRvcyBtYXBhcyBjb20gZGl2aXPDtWVzIHRlcnJpdG9yaWFpcyB2YXJpYWRhcy4gRmFyZW1vcyBwYXJhIG9zIG11bmljw61waW9zIGRlIE1hdG8gR3Jvc3NvIGRvIFN1bCAoTVMpLCBtYWxoYSBjb20gYSBlc3RydXR1cmEgbXVuaWNpcGFsIGRlIDIwMTgsIGNvbnRlbmRvIDc5IG11bmljw61waW9zLiDDiSBpbXBvcnRhbnRlIG8gbGVpdG9yIHRlciBlc3NhIGVzdHJ1dHVyYSBlbSBtZW50ZSwgcG9pcyBhbyBsb25nbyBkb3MgYW5vcywgbXVuaWPDrXBpb3Mgc8OjbyBjcmlhZG9zIGEgcGFydGlyIGRlIGRlc21lbWJyYW1lbnRvcyBkZSBvdXRyb3MsIG7Do28gbmVjZXNzYXJpYW1lbnRlIHJlc3BlaXRhbmRvIGxpbWl0ZXMgZGUgZGlzdHJpdG9zIG91IG91dHJvcyBhdHJpYnV0b3MgcHJldmlhbWVudGUgZGVmaW5pZG9zLiAgICAgDQogICAgDQoNCkVzdGUgcsOhcGlkbyBleGVtcGxvIGZheiB1c28gZGFzIGZ1bsOnw7VlcyBkbyBwYWNvdGUgYGdlb2JyYCBlIGFzc2ltLCBwcmVjaXNhbW9zIHNhYmVyIHF1YWlzIG9zIGPDs2RpZ29zIHBhcmEgY2FkYSBlc3RhZG8uIEEgZnVuw6fDo28gYGRvd25sb2FkX21ldGFkYXRhKClgIHBlcm1pdGUgZW5jb250cmFyIG9zIGPDs2RpZ29zIHBhcmEgZXN0YWRvIGUgYW5vIGUgYSBkZXNhZ3JlZ2HDp8OjbyBkZXNlamFkYSAobXVuaWPDrXBpbywgZXN0YWRvIGV0YykuDQoNCmBgYHtyIGVjaG8gPSBULCByZXN1bHRzID0gJ2hpZGUnfQ0KbWV0YWRhdGE8LWRvd25sb2FkX21ldGFkYXRhKCkgIyBwYXJhIHZlciBjb2RpZ29zDQpoZWFkKG1ldGFkYXRhKQ0KYGBgDQoNClBvc3NvIHZlcmlmaWNhciBxdWUgcGFyYSBNUywgZXNwZWNpZmljYXJlaSA1MCBlIHBhcmEgbyBhbm8gZGUgMjAxOC4gQWdvcmEgcG9zc28gYmFpeGFyIG9zIGRhZG9zIChzaGFwZXMpIHBhcmEgb3MgbXVuaWPDrXBpb3MgZGUgTWF0byBHcm9zc28gZG8gU3VsIGZhemVuZG8gdXNvIGRhIGZ1bsOnw6NvIGByZWFkX211bmljaXBhbGl0eShjb2RlX211bmk9NTAsIHllYXI9MjAxOClgIGVtOg0KDQpgYGANCiMgbsOjbyBleGVjdXRlaSBhZ29yYSBwb2lzIGZhcmVpIHBhcmEgMjAxMCBtYWlzIGEgZnJlbnRlDQphbGxfbXVuX21zIDwtIHJlYWRfbXVuaWNpcGFsaXR5KGNvZGVfbXVuaT01MCwgeWVhcj0yMDE4KQ0KYGBgDQoNCk8gdXN1w6FyaW8gcXVlIGRlc2VqYXIgYmFpeGFyIHRvZG9zIG9zIG11bmljw61waW9zIG9ic2VydmFyw6EgYWxndW1hIGRlbW9yYSBubyBkb3dubG9hZCBkb3MgZGFkb3MsIGRldmlkbyBhbyBuw7ptZXJvIGRlIG11bmljw61waW9zIGUgcmVzdHJpdG8gw6AgdmVsb2NpZGFkZSBkZSBzdWEgaW50ZXJuZXQuICAgIA0KQSB2aXN1YWxpemHDp8OjbyBkYSBzYcOtZGEgZG8gb2JqZXRvIGBhbGxfbXVuX21zYCBpbmRpY2EgYXMgdmFyacOhdmVpcyBhcm1hemVuYWRhcy4gw4kgcG9zc8OtdmVsIHZlcmlmaWNhciBxdWUgZXNzZSBvYmpldG8gw6kgZGEgY2xhc3NlIGBzZmAgZSBgZGF0YS5mcmFtZWAuIFVtIG9iamV0byBgc2ZgIGNvbnTDqW0gdW1hIGNvbGXDp8OjbyBkZSByZWN1cnNvcyBpbmNsdWluZG8gYXRyaWJ1dG9zIGUgZ2VvbWV0cmlhcyBxdWUgY29udGVtcGxhbSBvcyBhc3BlY3RvcyBlc3BhY2lhaXMgcGFyYSBkZXNlbmhhciBvIG1hcGEuDQoNCmBgYA0KY2xhc3MoYWxsX211bl9tcykNClsxXSAic2YiICAgICAgICAgImRhdGEuZnJhbWUiDQpgYGANCg0KTyBkYXRhc2V0IHBvZGUgZW50w6NvIHNlciBvYnNlcnZhZG8uIE8gZGF0YXNldCBjb250w6ltIG8gY8OzZGlnbyBkbyBtdW5pY8OtcGlvLCBvIG5vbWUgZG8gbXVuaWPDrXBpbywgbyBjw7NkaWdvIGRvIGVzdGFkbywgYSBzaWdsYSBkbyBlc3RhZG8gZSBhc3BlY3RvcyBnZW9ncsOhZmljb3MgY29tbyBsYXRpdHVkZSwgbG9uZ2l0dWRlIGRvcyB2w6FyaW9zIHNlZ21lbnRvcyBxdWUgcGVybWl0aXLDo28gY29uc3RydWlyIG8gbWFwYS4NCg0KIVtJbWFnZW0gZG8gb2JqZXRvIGBhbGxfbXVuX21zYC5dKC9wb3N0LzIwMjAtMDEtMzEtbWFwYXMtZW0tci1jb20tZ2VvYnJfZmlsZXMvc2FpZGFfYWxsX211bl9tcy5QTkcpDQoNCkFnb3JhIHZvdSBjb25zdHJ1aXIgdW1hIHZhcmnDoXZlbCBwYXJhIHNlciBwbG90YWRhIG5vIG1hcGEuIFByZWNpc28gdGVyIG9zIG1ldXMgZGFkb3MgZW0gdW1hIHBsYW5pbGhhIGVtIHF1ZSB1bWEgZGFzIGNvbHVuYXMgc2Vyw6EgbyBjw7NkaWdvIGRvIG11bmljw61waW8gZGEgbWVzbWEgZm9ybWEgcXVlIGNvbnN0YSBlbSBgY29kZV9tdW5pYCBubyBvYmpldG8gYGFsbF9tdW5fbXNgLiBSZWNvbWVuZG8gZmF6ZXIgYSBhc3NvY2lhw6fDo28gZW50cmUgb3MgZGFkb3MgcG9yIG1laW8gZG8gY8OzZGlnbywgbWVub3Mgc3VqZWl0byBhIGVycm9zIGRlIGRpZ2l0YcOnw6NvIHF1ZSBwYXJhIG9zIG5vbWVzIGRvcyBtdW5pY8OtcGlvcy4gUGFyYSBlc3RlIGV4ZW1wbG8sIGJhaXhlaSBvcyBkYWRvcyBkZSA8aHR0cDovL2F0bGFzYnJhc2lsLm9yZy5ici8yMDEzL3B0L2Rvd25sb2FkLz4sIG91IG1haXMgcHJlY2lzYW1lbnRlIGVtIDxodHRwOi8vYXRsYXNicmFzaWwub3JnLmJyLzIwMTMvZGF0YS9yYXdEYXRhL2F0bGFzMjAxM19kYWRvc2JydXRvc19wdC54bHN4PiwgbyBzaXRlIG9maWNpYWwgZG8gUE5VRCBwYXJhIG8gw41uZGljZSBkZSBEZXNlbnZvbHZpbWVudG8gSHVtYW5vIE11bmljaXBhbCBkbyBCcmFzaWwsIHBhcmEgMjAxMywgcXVlIG5lc3NlIGNhc28gc2UgcmVmZXJlIGFvcyBkYWRvcyBkbyBjZW5zbyBkZW1vZ3LDoWZpY28gMjAxMC4gICAgDQoNCk5vIGNhc28sIG8gYXJxdWl2byBFeGNlbCB2ZWlvIGNvbSBkYWRvcyBkZSB0b2RvIG8gQnJhc2lsIGUgcGFyYSBvcyBhbm9zIDE5OTEsIDIwMDAgZSAyMDEwLCBtYXMgZml6IHVtYSBleHRyYcOnw6NvIGRvcyBkYWRvcyBwYXJhIGFwZW5hcyBvcyBtdW5pY8OtcGlvcyBkZSBNUyBlIDIwMTAuIE9ic2VydmFyIHF1ZSBuZXNzZSBjYXNvIHRlbmhvIHVtYSBlc3RydXR1cmEgbXVuaWNpcGFsIGRlIDc4IG11bmljw61waW9zIGludsOpcyBkb3MgNzkgZGUgMjAxOC4gDQoNCmBgYHtyLCBldmFsPUZBTFNFfQ0KIyBFeGVjdXRlaSB1bWEgdmV6IGUgZ2VyZWkgZHB1dCBwYXJhIGV4ZWN1dGFyIG1haXMgcmFwaWRhbWVudGUgY29uZm9ybWUgcHLDs3hpbW8gY2h1bmsNCmxpYnJhcnkocmVhZHhsKQ0KdXJsIDwtICJodHRwOi8vYXRsYXNicmFzaWwub3JnLmJyLzIwMTMvZGF0YS9yYXdEYXRhL2F0bGFzMjAxM19kYWRvc2JydXRvc19wdC54bHN4Ig0KZGVzdGZpbGUgPC0gImF0bGFzMjAxM19kYWRvc2JydXRvc19wdC54bHN4Ig0KI29wdGlvbnModGltZW91dD0gNDAwMDAwMCkgIyBhcyB2ZXplcyBvIHNpdGUgZGVtb3JhIGNvbmZvcm1lIHN1YSBpbnRlcm5ldA0KY3VybDo6Y3VybF9kb3dubG9hZCh1cmwsIGRlc3RmaWxlKQ0KYXRsYXMyMDEzX2RhZG9zYnJ1dG9zX3B0IDwtIHJlYWRfZXhjZWwoZGVzdGZpbGUsIA0KICAgIHNoZWV0ID0gIk1VTiA5MS0wMC0xMCIpDQpkYWRvc19tcyA8LSBzdWJzZXQoYXRsYXMyMDEzX2RhZG9zYnJ1dG9zX3B0LCBVRiA9PSAnNTAnICYgQU5PID09ICcyMDEwJywNCiAgICAgICAgICAgICAgICAgICBzZWxlY3Q9YyhDb2RtdW43LElESE0sSURITV9FLElESE1fTCxJREhNX1IpKQ0KcHJpbnQoZGFkb3NfbXMpDQpgYGANCg0KU2VndWUgbyBjaHVuayBwYXJhIGNhcnJlZ2FyIGRhZG9zIGRlIGBkYWRvc19tc2Agc2VtIHByZWNpc2FyIGFjZXNzYXIgbyBhcnF1aXZvIG1lc3RyZSBkbyBjaHVuayBhbnRlcmlvci4gR2VyYSBvcyBtZXNtb3MgcmVzdWx0YWRvcyBhY2ltYSwgdHJhbnNmb3JtYWRvcyBhIHBhcnRpciBkbyBgZHB1dCgpYCBkZSBgZGFkb3NfbXNgLiBFc3RhIGFsdGVybmF0aXZhIGFjZWxlcmEgYSBleGVjdcOnw6NvIGRvIHNjcmlwdC4gICAgDQoNCmBgYHtyfQ0KZGFkb3NfbXM8LXN0cnVjdHVyZShsaXN0KENvZG11bjcgPSBjKDUwMDAyMDMsIDUwMDAyNTIsIDUwMDA2MDksIDUwMDA3MDgsIA0KNTAwMDgwNywgNTAwMDg1NiwgNTAwMDkwNiwgNTAwMTAwMywgNTAwMTEwMiwgNTAwMTI0MywgNTAwMTUwOCwgDQo1MDAxOTA0LCA1MDAyMDAxLCA1MDAyMTAwLCA1MDAyMTU5LCA1MDAyMjA5LCA1MDAyMzA4LCA1MDAyNDA3LCANCjUwMDI2MDUsIDUwMDI3MDQsIDUwMDI4MDMsIDUwMDI5MDIsIDUwMDI5NTEsIDUwMDMxMDgsIDUwMDMxNTcsIA0KNTAwMzIwNywgNTAwMzI1NiwgNTAwMzMwNiwgNTAwMzQ1NCwgNTAwMzQ4OCwgNTAwMzUwNCwgNTAwMzcwMiwgDQo1MDAzNzUxLCA1MDAzODAxLCA1MDAzOTAwLCA1MDA0MDA3LCA1MDA0MTA2LCA1MDA0MzA0LCA1MDA0NDAzLCANCjUwMDQ1MDIsIDUwMDQ2MDEsIDUwMDQ3MDAsIDUwMDQ4MDksIDUwMDQ5MDgsIDUwMDUwMDQsIDUwMDUxMDMsIA0KNTAwNTE1MiwgNTAwNTIwMiwgNTAwNTI1MSwgNTAwNTQwMCwgNTAwNTYwOCwgNTAwNTY4MSwgNTAwNTcwNywgDQo1MDA1ODA2LCA1MDA2MDAyLCA1MDA2MjAwLCA1MDA2MjU5LCA1MDA2MzA5LCA1MDA2MzU4LCA1MDA2NDA4LCANCjUwMDY2MDYsIDUwMDY5MDMsIDUwMDcxMDksIDUwMDcyMDgsIDUwMDczMDcsIDUwMDc0MDYsIDUwMDc1MDUsIA0KNTAwNzU1NCwgNTAwNzY5NSwgNTAwNzcwMywgNTAwNzgwMiwgNTAwNzkwMSwgNTAwNzkzNSwgNTAwNzk1MCwgDQo1MDA3OTc2LCA1MDA4MDA4LCA1MDA4MzA1LCA1MDA4NDA0KSwgSURITSA9IGMoMC42NywgMC43MTEsIDAuNjczLCANCjAuNjYzLCAwLjY3LCAwLjY5NywgMC42NDMsIDAuNjk3LCAwLjY4OCwgMC42MzMsIDAuNjgxLCAwLjcxLCANCjAuNjg0LCAwLjY5OCwgMC42NjYsIDAuNjcsIDAuNzAxLCAwLjY5MiwgMC43MDMsIDAuNzg0LCAwLjY0NywgDQowLjcyNywgMC43NTQsIDAuNjcxLCAwLjU4OSwgMC43LCAwLjcwNiwgMC43MDMsIDAuNjk0LCAwLjYzOSwgDQowLjY5OSwgMC43NDcsIDAuNjg0LCAwLjcxNCwgMC42NiwgMC43MjEsIDAuNjc1LCAwLjY2MiwgMC42ODEsIA0KMC42NTQsIDAuNjIsIDAuNzIsIDAuNTI2LCAwLjY2NCwgMC43MTIsIDAuNzA4LCAwLjYyMywgMC43MDQsIA0KMC42NzIsIDAuNzM2LCAwLjYzMiwgMC42ODYsIDAuNywgMC42MzksIDAuNjk0LCAwLjcyMSwgMC42NDksIA0KMC43MjEsIDAuNTg4LCAwLjY3MSwgMC43MDEsIDAuNjY2LCAwLjY2NCwgMC43MTUsIDAuNzA5LCAwLjY3MywgDQowLjY1MSwgMC42NDIsIDAuNzI5LCAwLjYxNCwgMC42ODIsIDAuNjg2LCAwLjY4MSwgMC41OTMsIDAuNjUxLCANCjAuNjU4LCAwLjc0NCwgMC43MTEpLCBJREhNX0UgPSBjKDAuNTE4LCAwLjU3MiwgMC41NDYsIDAuNTU3LCANCjAuNTM4LCAwLjU4MiwgMC41MjYsIDAuNTg4LCAwLjU2MiwgMC41MDcsIDAuNTM3LCAwLjYwNiwgMC41NTksIA0KMC41ODUsIDAuNTczLCAwLjUwOCwgMC41NywgMC41OTIsIDAuNTk2LCAwLjcyNCwgMC41MjIsIDAuNjI3LCANCjAuNjY1LCAwLjUzMSwgMC40MTcsIDAuNTg2LCAwLjYwNiwgMC41NzksIDAuNTk1LCAwLjUyOCwgMC41OTcsIA0KMC42NTcsIDAuNTc3LCAwLjYyMSwgMC41MTEsIDAuNjQ4LCAwLjU0OSwgMC41MywgMC41MzEsIDAuNTIzLCANCjAuNDc5LCAwLjYxNSwgMC4zMzcsIDAuNTMsIDAuNTk1LCAwLjU3OSwgMC40ODUsIDAuNjE4LCAwLjU0NSwgDQowLjYxMywgMC41MDcsIDAuNTY1LCAwLjU5NywgMC40ODMsIDAuNTU0LCAwLjYxNiwgMC41MjMsIDAuNjI3LCANCjAuNDQ0LCAwLjU2MiwgMC41OTgsIDAuNTI2LCAwLjUxOSwgMC41OSwgMC41ODUsIDAuNTIxLCAwLjQ5MSwgDQowLjUwNSwgMC42MDgsIDAuNDUsIDAuNTc2LCAwLjU2MSwgMC41NTcsIDAuNDM0LCAwLjU0NSwgMC41MjEsIA0KMC42NDUsIDAuNjI2KSwgSURITV9MID0gYygwLjgyMywgMC44NTgsIDAuODE4LCAwLjc4OSwgMC44MjYsIA0KMC44MzksIDAuNzk5LCAwLjgwNCwgMC44NCwgMC43OTgsIDAuODQ4LCAwLjg0NywgMC44MTQsIDAuODMsIA0KMC43NzYsIDAuODMxLCAwLjgzNywgMC44MjgsIDAuODE3LCAwLjg0NCwgMC44MjYsIDAuODExLCAwLjg1LCANCjAuODMsIDAuODA2LCAwLjgzNCwgMC44MTEsIDAuODM2LCAwLjgxLCAwLjc3MywgMC44MDksIDAuODQzLCANCjAuODI0LCAwLjgxNSwgMC44MywgMC44MjIsIDAuODI2LCAwLjgxNywgMC44NDYsIDAuODA5LCAwLjc3MiwgDQowLjg1LCAwLjc5MSwgMC44MjcsIDAuODQ1LCAwLjg1NywgMC43NywgMC44MjIsIDAuODIyLCAwLjg3MywgDQowLjc4MiwgMC44MDgsIDAuODAzLCAwLjgyMiwgMC44MDksIDAuODUsIDAuNzk4LCAwLjgyMywgMC44MTEsIA0KMC44MDEsIDAuODEyLCAwLjgzLCAwLjgzLCAwLjg2MSwgMC44NjksIDAuODUyLCAwLjgzLCAwLjgsIDAuODUsIA0KMC43NzgsIDAuODI1LCAwLjgyOSwgMC44MDMsIDAuNzgyLCAwLjc2OSwgMC44MzksIDAuODQ5LCAwLjgzNQ0KKSwgSURITV9SID0gYygwLjcwNSwgMC43MzMsIDAuNjgzLCAwLjY2MywgMC42NzYsIDAuNjkyLCAwLjYzMywgDQowLjcxNywgMC42OSwgMC42MjgsIDAuNjk0LCAwLjY5OCwgMC43MDIsIDAuNjk5LCAwLjY2NSwgMC43MTQsIA0KMC43MjEsIDAuNjc2LCAwLjcxNSwgMC43OSwgMC42MjgsIDAuNzU2LCAwLjc1OCwgMC42ODQsIDAuNjA3LCANCjAuNzAxLCAwLjcxNywgMC43MTksIDAuNjkzLCAwLjY0LCAwLjcwNiwgMC43NTMsIDAuNjc0LCAwLjcxOSwgDQowLjY3NywgMC43MDUsIDAuNjc3LCAwLjY3MSwgMC43MDIsIDAuNjYsIDAuNjQ1LCAwLjcxNSwgMC41NDcsIA0KMC42NjgsIDAuNzE4LCAwLjcxNiwgMC42NDYsIDAuNjg3LCAwLjY3NiwgMC43NDQsIDAuNjM4LCAwLjcwNywgDQowLjcxNSwgMC42NTgsIDAuNzQ2LCAwLjcxNiwgMC42NTYsIDAuNzI3LCAwLjU2NiwgMC42NzIsIDAuNzA4LCANCjAuNjc3LCAwLjY4MSwgMC43MiwgMC43MDIsIDAuNjg2LCAwLjY3NiwgMC42NTUsIDAuNzUxLCAwLjY2LCANCjAuNjY4LCAwLjY5NCwgMC43MDYsIDAuNjE1LCAwLjY1NywgMC42NTEsIDAuNzUyLCAwLjY4OSkpLCByb3cubmFtZXMgPSBjKE5BLCANCi03OEwpLCBjbGFzcyA9IGMoInRibF9kZiIsICJ0YmwiLCAiZGF0YS5mcmFtZSIpKQ0KYGBgDQoNClNlZ3VlIG8gY2h1bmsgcGFyYSBvcMOnw6NvIGRlIGRvd25sb2FkIG1hbnVhbCBlIGFybWF6ZW5hbWVudG8gZW0gc2V1IGRpcmV0w7NyaW8uICAgIA0KDQpgYGB7ciwgZXZhbD1GQUxTRX0NCiMgdHJhemVuZG8gb3MgZGFkb3MgZG8gQnJhc2lsIHRvZG8gYXBlbmFzIHBhcmEgbXVuaWNpcGlvcw0KbGlicmFyeShyZWFkeGwpDQphdGxhczIwMTNfZGFkb3NicnV0b3NfcHQgPC0gcmVhZF9leGNlbCgiYXRsYXMyMDEzX2RhZG9zYnJ1dG9zX3B0Lnhsc3giLCANCiAgICBzaGVldCA9ICJNVU4gOTEtMDAtMTAiKQ0KIyByZWR1emlyIGxpbmhhcyBwYXJhIDIwMTAgZSBNUw0KIyB1c2FuZG8gYSBmdW5jYW8gc3Vic2V0IHBhcmEgcGVnYXIgYXMgY29sdW5hcyBkZSBJREggYXTDqSBhIMO6bHRpbWEgKCkNCmRhZG9zX21zIDwtIHN1YnNldChhdGxhczIwMTNfZGFkb3NicnV0b3NfcHQsIFVGID09ICc1MCcgJiBBTk8gPT0gJzIwMTAnLA0KICAgICAgICAgICAgICAgICAgIHNlbGVjdD1jKENvZG11bjcsSURITSxJREhNX0UsSURITV9MLElESE1fUikpDQpwcmludChkYWRvc19tcykNCmBgYA0KDQpQcmVjaXNhcmVpIHBvcnRhbnRvIGRhIGVzdHJ1dHVyYSBkZSAyMDEwIHBhcmEgY29tcGF0aWJpbGl6YXIgbyBtYXBhLiBBIGV4ZWN1w6fDo28gbm9ybWFsIGRvIHByw7N4aW1vIGNodW5rIG1vc3RyYXJpYSBvIGFuZGFtZW50byBkbyBkb3dubG9hZCBkYSBlc3RydXR1cmEgZGUgMjAxMCwgbWFzIGVtIG1ldSBtYXJrZG93biBzb2xpY2l0ZWkgcGFyYSAnaGlkZScgcGFyYSBlY29ub21pemFyIGVzcGHDp28gZG8gcG9zdC4gICAgDQoNCmBgYHtyIGVjaG8gPSBULCByZXN1bHRzID0gJ2hpZGUnfQ0KbGlicmFyeShnZW9icikNCiMgc3VnaXJvIHBlcm1hbmVjZXIgbyB0aW1lb3V0IGFudGVyaW9yLCBvcHRpb25zKHRpbWVvdXQ9IDQwMDAwMDApDQphbGxfbXVuX21zIDwtIHJlYWRfbXVuaWNpcGFsaXR5KGNvZGVfbXVuaT01MCwgeWVhcj0yMDEwKQ0KYGBgDQoNCkp1bnRhcmVpIG9zIGRhdGFzZXRzIHBlbGEgY29uZGnDp8OjbyBkZSBxdWUgbyBgY29kZV9tdW5pYCBkbyBvYmpldG8gYGFsbF9tdW5fbXNgIMOpIGlndWFsIGFvIGBDb2RtdW43YCBkbyBvYmpldG8gYGRhZG9zX21zYC4gICAgDQoNCmBgYHtyfQ0KZGF0YXNldF9maW5hbCA9IGxlZnRfam9pbihhbGxfbXVuX21zLCBkYWRvc19tcywgYnk9YygiY29kZV9tdW5pIj0iQ29kbXVuNyIpKQ0KbWF4KGRhdGFzZXRfZmluYWwkSURITSkgIyAwLjc4NA0KbWluKGRhdGFzZXRfZmluYWwkSURITSkgIyAwLjUyNg0KZ2dwbG90KCkgKw0KICBnZW9tX3NmKGRhdGE9ZGF0YXNldF9maW5hbCwgYWVzKGZpbGw9SURITSksIGNvbG9yPSBOQSwgc2l6ZT0uMTUpKw0KICBsYWJzKHRpdGxlPSJJREhNIDIwMTMgKGFubyBiYXNlIDIwMTApIGRvcyBNdW5pY2lww61vcyBkZSBNUyIsDQogICAgICAgY2FwdGlvbj0nRm9udGU6IEVsYWJvcmHDp8OjbyBwcsOzcHJpYScsIHNpemU9OCkrDQogIHNjYWxlX2ZpbGxfZGlzdGlsbGVyKHBhbGV0dGUgPSAiR3JlZW5zIiwgbGltaXRzPWMoMC41LCAwLjgpLA0KICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJDb2RlX211bmkiKSsNCiAgdGhlbWVfbWluaW1hbCgpDQoNCmBgYA0KDQpTZW5kbyB1bSBtYXBhIGZlaXRvIGVtIGBnZ3Bsb3QyYCBwZWxvcyBjb21hbmRvcyBgZ2dwbG90KCkgKw0KICBnZW9tX3NmKGRhdGE9ZGF0YXNldF9maW5hbCwgYWVzKGZpbGw9SURITSksIGNvbG9yPSBOQSwgc2l6ZT0uMTUpYCwgbyBwYWRyw6NvIMOpIHVtIG1hcGEgbmEgZXNjYWxhIGF6dWwuIE91IHNlamEsIGZhemVuZG8gYWdvcmEgdW0gbWFwYSBwYXJhIG8gSURITV9FIChJREhNIEVkdWNhw6fDo28pLCByZWNvbWVuZG8gbyB1c3XDoXJpbyBmYXplciBvIHBhc3NvIGEgcGFzc28gZGUgbW9kbyBhIHZlciBleGF0YW1lbnRlIG8gcXVlIG8gY8OzZGlnbyByZWFsaXphOiAgICANCiAgDQpgYGB7cn0NCiNkYXRhc2V0X2ZpbmFsID0gbGVmdF9qb2luKGFsbF9tdW5fbXMsIGRhZG9zX21zLCBieT1jKCJjb2RlX211bmkiPSJDb2RtdW43IikpDQptYXgoZGF0YXNldF9maW5hbCRJREhNX0UpICMgMC43MjQNCm1pbihkYXRhc2V0X2ZpbmFsJElESE1fRSkgIyAwLjMzNw0KYGBgDQoNCmBgYHtyfQ0KZ2dwbG90KCkgKw0KICBnZW9tX3NmKGRhdGE9ZGF0YXNldF9maW5hbCwgYWVzKGZpbGw9SURITV9FKSwgY29sb3I9IE5BLCBzaXplPS4xNSkNCmBgYA0KDQpWZWphIHF1ZSBvIG1hcGEgYW50ZXJpb3Igc2FpdSBlbSBhenVsLCBzZW0gcsOzdHVsb3MuIE9ic2VydmUgcXVlIG5lc3NlIGNhc28gZSBubyBwcsOzeGltbywgbsOjbyBmaXogbmVuaHVtYSByZXN0cmnDp8OjbyDDoCBsZWdlbmRhLiAgICAgDQoNCk8gcHLDs3hpbW8gc2FpIGNvbSByw7N0dWxvcyBkbyB0w610dWxvIGUgbm90YSBhbyBmaW5hbCBkbyBtYXBhLg0KDQpgYGB7cn0NCmdncGxvdCgpICsNCiAgZ2VvbV9zZihkYXRhPWRhdGFzZXRfZmluYWwsIGFlcyhmaWxsPUlESE1fRSksIGNvbG9yPSBOQSwgc2l6ZT0uMTUpKw0KICBsYWJzKHRpdGxlPSJJREhNIEVkdWNhw6fDo28gMjAxMyAoYW5vIGJhc2UgMjAxMCkgZG9zIE11bmljaXDDrW9zIGRlIE1TIiwNCiAgICAgICBjYXB0aW9uPSdGb250ZTogRWxhYm9yYcOnw6NvIHByw7NwcmlhJywgc2l6ZT04KQ0KYGBgDQoNClBhcmEgbyBwcsOzeGltbyBtYXBhLCBjb2xvY28gYSBwYWxoZXRhIGRlIGNvcmVzIGVtIHZlcm1lbGhvIGUgb3MgbGltaXRlcyBwYXJhIGFzIGNsYXNzZXMsIGFnb3JhIGRlIDAgYSAxLiAgICANCg0KYGBge3J9DQpnZ3Bsb3QoKSArDQogIGdlb21fc2YoZGF0YT1kYXRhc2V0X2ZpbmFsLCBhZXMoZmlsbD1JREhNX0UpLCBjb2xvcj0gTkEsIHNpemU9LjE1KSsNCiAgbGFicyh0aXRsZT0iSURITSBFZHVjYcOnw6NvIDIwMTMgKGFubyBiYXNlIDIwMTApIGRvcyBNdW5pY2lww61vcyBkZSBNUyIsDQogICAgICAgY2FwdGlvbj0nRm9udGU6IEVsYWJvcmHDp8OjbyBwcsOzcHJpYScsIHNpemU9OCkrDQogIHNjYWxlX2ZpbGxfZGlzdGlsbGVyKHBhbGV0dGUgPSAiUmVkcyIsIGxpbWl0cz1jKDAuMCwgMS4wKSwNCiAgICAgICAgICAgICAgICAgICAgICAgbmFtZT0iQ29kZV9tdW5pIikNCmBgYA0KDQpObyBleGVtcGxvIGFiYWl4byBmYcOnbyB1bSBjYXNvIHBhcnRpY3VsYXIgZW0gcXVlIHVtIG11bmljw61waW8sIG8gZGUgbcOheGltbyBJREhNX0UgZmljb3UgZXhjbHXDrWRvIHBvciB1bWEgcmVzdHJpw6fDo28gYW8gZGVsaW1pdGFyIG8gbcOheGltbyBkYSBwYWxoZXRhIGVtIDAuNyAobyB2YWxvciBzZXJpYSBkZSBDYW1wbyBHcmFuZGUsIDAuNzI0LCBtYWlvciBxdWUgMC43KS4gUG9ydGFudG8sIG8gbXVuaWPDrXBpbyBmaWNvdSBlbSBwcmV0by4gICAgDQoNCmBgYHtyfQ0KZ2dwbG90KCkgKw0KICBnZW9tX3NmKGRhdGE9ZGF0YXNldF9maW5hbCwgYWVzKGZpbGw9SURITV9FKSwgY29sb3I9IE5BLCBzaXplPS4xNSkrDQogIGxhYnModGl0bGU9IklESE0gRWR1Y2HDp8OjbyAyMDEzIChhbm8gYmFzZSAyMDEwKSBkb3MgTXVuaWNpcMOtb3MgZGUgTVMiLA0KICAgICAgIGNhcHRpb249J0ZvbnRlOiBFbGFib3Jhw6fDo28gcHLDs3ByaWEnLCBzaXplPTgpKw0KICBzY2FsZV9maWxsX2Rpc3RpbGxlcihsaW1pdHM9YygwLjMsIDAuNykpKw0KICB0aGVtZV9taW5pbWFsKCkNCg0KYGBgDQoNCk91dHJhcyBwYWxoZXRhcyBkZSBjb3JlcyBwb2RlIHNlciB2aXN1YWxpemFkYSBlbSA8aHR0cDovL3d3dy5zdGhkYS5jb20vZW5nbGlzaC93aWtpL2dncGxvdDItY29sb3JzLWhvdy10by1jaGFuZ2UtY29sb3JzLWF1dG9tYXRpY2FsbHktYW5kLW1hbnVhbGx5Pi4gICAgDQoNCg0KYGBge3J9DQojIGRhdGFzZXRfZmluYWwgPSBsZWZ0X2pvaW4oYWxsX211bl9tcywgZGFkb3NfbXMsIGJ5PWMoImNvZGVfbXVuaSI9IkNvZG11bjciKSkNCiMgbWF4KGRhdGFzZXRfZmluYWwkSURITSkgIyAwLjc4NA0KIyBtaW4oZGF0YXNldF9maW5hbCRJREhNKSAjIDAuNTI2DQpnZ3Bsb3QoKSArDQogIGdlb21fc2YoZGF0YT1kYXRhc2V0X2ZpbmFsLCBhZXMoZmlsbD1JREhNKSwgY29sb3I9IE5BLCBzaXplPS4xNSkrDQogIGxhYnModGl0bGU9IklESE0gMjAxMyAoYW5vIGJhc2UgMjAxMCkgZG9zIE11bmljaXDDrW9zIGRlIE1TIiwNCiAgICAgICBjYXB0aW9uPSdGb250ZTogRWxhYm9yYcOnw6NvIHByw7NwcmlhJywgc2l6ZT04KSsNCiAgc2NhbGVfZmlsbF9kaXN0aWxsZXIocGFsZXR0ZSA9ICJSZEd5IiwgbGltaXRzPWMoMC41LCAwLjgpLA0KICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJDb2RlX211bmkiKSsNCiAgdGhlbWVfbWluaW1hbCgpDQoNCmBgYA0KDQpSZWZlcsOqbmNpYXMgey0jUmVmZXLDqm5jaWFzfQ0KPT09PT09PT09PT09PT09PT09PT09&#34; download=&#34;2020-01-31-mapas-em-r-com-geobr.Rmd&#34;&gt;Download 2020-01-31-mapas-em-r-com-geobr.Rmd&lt;/a&gt;
&lt;/div&gt;
&lt;div id=&#34;introdução&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introdução&lt;/h1&gt;
&lt;p&gt;Para realizar seu mapa em R, inicialmente o leitor deve baixar os programas e pacotes necessários ao projeto. Neste caso, sugere-se que utilize o RStudio e o R atualizados, a partir de: &lt;a href=&#34;http://cran.r-project.org/bin/windows/base/&#34; class=&#34;uri&#34;&gt;http://cran.r-project.org/bin/windows/base/&lt;/a&gt; e &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download3/&#34; class=&#34;uri&#34;&gt;https://www.rstudio.com/products/rstudio/download3/&lt;/a&gt;. Quando esta revisão foi feita, a versão do RStudio era a &lt;em&gt;RStudio Desktop 1.2.5033&lt;/em&gt; e do &lt;em&gt;R-3.6.1 for Windows (32/64 bit)&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Primeiro instale o R e posteriormente o RStudio, de modo que o segundo reconheça automaticamente o primeiro. Se tudo estiver perfeito, a tela inicial do RStudio mostrará corretamente a versão do R.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;mapas-em-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Mapas em R&lt;/h1&gt;
&lt;p&gt;Agora a meta é gerar um mapa simples em R. Para tanto, primeiro define-se a malha municipal desejada. Para o presente caso, utilizam-se as malhas digitais do pacote &lt;code&gt;geobr&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Os pacotes (previamente instalados) são aqui carregados:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(geobr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;geobr&amp;#39; was built under R version 3.6.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required namespace: sf&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(sf)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Linking to GEOS 3.6.1, GDAL 2.2.3, PROJ 4.9.3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;dplyr&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     filter, lag&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     intersect, setdiff, setequal, union&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rio)
library(readr)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O pacote &lt;code&gt;geobr&lt;/code&gt; tem as rotinas para o download dos mapas com divisões territoriais variadas. Faremos para os municípios de Mato Grosso do Sul (MS), malha com a estrutura municipal de 2018, contendo 79 municípios. É importante o leitor ter essa estrutura em mente, pois ao longo dos anos, municípios são criados a partir de desmembramentos de outros, não necessariamente respeitando limites de distritos ou outros atributos previamente definidos.&lt;/p&gt;
&lt;p&gt;Este rápido exemplo faz uso das funções do pacote &lt;code&gt;geobr&lt;/code&gt; e assim, precisamos saber quais os códigos para cada estado. A função &lt;code&gt;download_metadata()&lt;/code&gt; permite encontrar os códigos para estado e ano e a desagregação desejada (município, estado etc).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;metadata&amp;lt;-download_metadata() # para ver codigos
head(metadata)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Posso verificar que para MS, especificarei 50 e para o ano de 2018. Agora posso baixar os dados (shapes) para os municípios de Mato Grosso do Sul fazendo uso da função &lt;code&gt;read_municipality(code_muni=50, year=2018)&lt;/code&gt; em:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# não executei agora pois farei para 2010 mais a frente
all_mun_ms &amp;lt;- read_municipality(code_muni=50, year=2018)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O usuário que desejar baixar todos os municípios observará alguma demora no download dos dados, devido ao número de municípios e restrito à velocidade de sua internet.&lt;br /&gt;
A visualização da saída do objeto &lt;code&gt;all_mun_ms&lt;/code&gt; indica as variáveis armazenadas. É possível verificar que esse objeto é da classe &lt;code&gt;sf&lt;/code&gt; e &lt;code&gt;data.frame&lt;/code&gt;. Um objeto &lt;code&gt;sf&lt;/code&gt; contém uma coleção de recursos incluindo atributos e geometrias que contemplam os aspectos espaciais para desenhar o mapa.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class(all_mun_ms)
[1] &amp;quot;sf&amp;quot;         &amp;quot;data.frame&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O dataset pode então ser observado. O dataset contém o código do município, o nome do município, o código do estado, a sigla do estado e aspectos geográficos como latitude, longitude dos vários segmentos que permitirão construir o mapa.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/2020-01-31-mapas-em-r-com-geobr_files/saida_all_mun_ms.PNG&#34; alt=&#34;Imagem do objeto all_mun_ms.&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Imagem do objeto &lt;code&gt;all_mun_ms&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Agora vou construir uma variável para ser plotada no mapa. Preciso ter os meus dados em uma planilha em que uma das colunas será o código do município da mesma forma que consta em &lt;code&gt;code_muni&lt;/code&gt; no objeto &lt;code&gt;all_mun_ms&lt;/code&gt;. Recomendo fazer a associação entre os dados por meio do código, menos sujeito a erros de digitação que para os nomes dos municípios. Para este exemplo, baixei os dados de &lt;a href=&#34;http://atlasbrasil.org.br/2013/pt/download/&#34; class=&#34;uri&#34;&gt;http://atlasbrasil.org.br/2013/pt/download/&lt;/a&gt;, ou mais precisamente em &lt;a href=&#34;http://atlasbrasil.org.br/2013/data/rawData/atlas2013_dadosbrutos_pt.xlsx&#34; class=&#34;uri&#34;&gt;http://atlasbrasil.org.br/2013/data/rawData/atlas2013_dadosbrutos_pt.xlsx&lt;/a&gt;, o site oficial do PNUD para o Índice de Desenvolvimento Humano Municipal do Brasil, para 2013, que nesse caso se refere aos dados do censo demográfico 2010.&lt;/p&gt;
&lt;p&gt;No caso, o arquivo Excel veio com dados de todo o Brasil e para os anos 1991, 2000 e 2010, mas fiz uma extração dos dados para apenas os municípios de MS e 2010. Observar que nesse caso tenho uma estrutura municipal de 78 municípios invés dos 79 de 2018.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Executei uma vez e gerei dput para executar mais rapidamente conforme próximo chunk
library(readxl)
url &amp;lt;- &amp;quot;http://atlasbrasil.org.br/2013/data/rawData/atlas2013_dadosbrutos_pt.xlsx&amp;quot;
destfile &amp;lt;- &amp;quot;atlas2013_dadosbrutos_pt.xlsx&amp;quot;
#options(timeout= 4000000) # as vezes o site demora conforme sua internet
curl::curl_download(url, destfile)
atlas2013_dadosbrutos_pt &amp;lt;- read_excel(destfile, 
    sheet = &amp;quot;MUN 91-00-10&amp;quot;)
dados_ms &amp;lt;- subset(atlas2013_dadosbrutos_pt, UF == &amp;#39;50&amp;#39; &amp;amp; ANO == &amp;#39;2010&amp;#39;,
                   select=c(Codmun7,IDHM,IDHM_E,IDHM_L,IDHM_R))
print(dados_ms)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Segue o chunk para carregar dados de &lt;code&gt;dados_ms&lt;/code&gt; sem precisar acessar o arquivo mestre do chunk anterior. Gera os mesmos resultados acima, transformados a partir do &lt;code&gt;dput()&lt;/code&gt; de &lt;code&gt;dados_ms&lt;/code&gt;. Esta alternativa acelera a execução do script.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dados_ms&amp;lt;-structure(list(Codmun7 = c(5000203, 5000252, 5000609, 5000708, 
5000807, 5000856, 5000906, 5001003, 5001102, 5001243, 5001508, 
5001904, 5002001, 5002100, 5002159, 5002209, 5002308, 5002407, 
5002605, 5002704, 5002803, 5002902, 5002951, 5003108, 5003157, 
5003207, 5003256, 5003306, 5003454, 5003488, 5003504, 5003702, 
5003751, 5003801, 5003900, 5004007, 5004106, 5004304, 5004403, 
5004502, 5004601, 5004700, 5004809, 5004908, 5005004, 5005103, 
5005152, 5005202, 5005251, 5005400, 5005608, 5005681, 5005707, 
5005806, 5006002, 5006200, 5006259, 5006309, 5006358, 5006408, 
5006606, 5006903, 5007109, 5007208, 5007307, 5007406, 5007505, 
5007554, 5007695, 5007703, 5007802, 5007901, 5007935, 5007950, 
5007976, 5008008, 5008305, 5008404), IDHM = c(0.67, 0.711, 0.673, 
0.663, 0.67, 0.697, 0.643, 0.697, 0.688, 0.633, 0.681, 0.71, 
0.684, 0.698, 0.666, 0.67, 0.701, 0.692, 0.703, 0.784, 0.647, 
0.727, 0.754, 0.671, 0.589, 0.7, 0.706, 0.703, 0.694, 0.639, 
0.699, 0.747, 0.684, 0.714, 0.66, 0.721, 0.675, 0.662, 0.681, 
0.654, 0.62, 0.72, 0.526, 0.664, 0.712, 0.708, 0.623, 0.704, 
0.672, 0.736, 0.632, 0.686, 0.7, 0.639, 0.694, 0.721, 0.649, 
0.721, 0.588, 0.671, 0.701, 0.666, 0.664, 0.715, 0.709, 0.673, 
0.651, 0.642, 0.729, 0.614, 0.682, 0.686, 0.681, 0.593, 0.651, 
0.658, 0.744, 0.711), IDHM_E = c(0.518, 0.572, 0.546, 0.557, 
0.538, 0.582, 0.526, 0.588, 0.562, 0.507, 0.537, 0.606, 0.559, 
0.585, 0.573, 0.508, 0.57, 0.592, 0.596, 0.724, 0.522, 0.627, 
0.665, 0.531, 0.417, 0.586, 0.606, 0.579, 0.595, 0.528, 0.597, 
0.657, 0.577, 0.621, 0.511, 0.648, 0.549, 0.53, 0.531, 0.523, 
0.479, 0.615, 0.337, 0.53, 0.595, 0.579, 0.485, 0.618, 0.545, 
0.613, 0.507, 0.565, 0.597, 0.483, 0.554, 0.616, 0.523, 0.627, 
0.444, 0.562, 0.598, 0.526, 0.519, 0.59, 0.585, 0.521, 0.491, 
0.505, 0.608, 0.45, 0.576, 0.561, 0.557, 0.434, 0.545, 0.521, 
0.645, 0.626), IDHM_L = c(0.823, 0.858, 0.818, 0.789, 0.826, 
0.839, 0.799, 0.804, 0.84, 0.798, 0.848, 0.847, 0.814, 0.83, 
0.776, 0.831, 0.837, 0.828, 0.817, 0.844, 0.826, 0.811, 0.85, 
0.83, 0.806, 0.834, 0.811, 0.836, 0.81, 0.773, 0.809, 0.843, 
0.824, 0.815, 0.83, 0.822, 0.826, 0.817, 0.846, 0.809, 0.772, 
0.85, 0.791, 0.827, 0.845, 0.857, 0.77, 0.822, 0.822, 0.873, 
0.782, 0.808, 0.803, 0.822, 0.809, 0.85, 0.798, 0.823, 0.811, 
0.801, 0.812, 0.83, 0.83, 0.861, 0.869, 0.852, 0.83, 0.8, 0.85, 
0.778, 0.825, 0.829, 0.803, 0.782, 0.769, 0.839, 0.849, 0.835
), IDHM_R = c(0.705, 0.733, 0.683, 0.663, 0.676, 0.692, 0.633, 
0.717, 0.69, 0.628, 0.694, 0.698, 0.702, 0.699, 0.665, 0.714, 
0.721, 0.676, 0.715, 0.79, 0.628, 0.756, 0.758, 0.684, 0.607, 
0.701, 0.717, 0.719, 0.693, 0.64, 0.706, 0.753, 0.674, 0.719, 
0.677, 0.705, 0.677, 0.671, 0.702, 0.66, 0.645, 0.715, 0.547, 
0.668, 0.718, 0.716, 0.646, 0.687, 0.676, 0.744, 0.638, 0.707, 
0.715, 0.658, 0.746, 0.716, 0.656, 0.727, 0.566, 0.672, 0.708, 
0.677, 0.681, 0.72, 0.702, 0.686, 0.676, 0.655, 0.751, 0.66, 
0.668, 0.694, 0.706, 0.615, 0.657, 0.651, 0.752, 0.689)), row.names = c(NA, 
-78L), class = c(&amp;quot;tbl_df&amp;quot;, &amp;quot;tbl&amp;quot;, &amp;quot;data.frame&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Segue o chunk para opção de download manual e armazenamento em seu diretório.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# trazendo os dados do Brasil todo apenas para municipios
library(readxl)
atlas2013_dadosbrutos_pt &amp;lt;- read_excel(&amp;quot;atlas2013_dadosbrutos_pt.xlsx&amp;quot;, 
    sheet = &amp;quot;MUN 91-00-10&amp;quot;)
# reduzir linhas para 2010 e MS
# usando a funcao subset para pegar as colunas de IDH até a última ()
dados_ms &amp;lt;- subset(atlas2013_dadosbrutos_pt, UF == &amp;#39;50&amp;#39; &amp;amp; ANO == &amp;#39;2010&amp;#39;,
                   select=c(Codmun7,IDHM,IDHM_E,IDHM_L,IDHM_R))
print(dados_ms)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Precisarei portanto da estrutura de 2010 para compatibilizar o mapa. A execução normal do próximo chunk mostraria o andamento do download da estrutura de 2010, mas em meu markdown solicitei para ‘hide’ para economizar espaço do post.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(geobr)
# sugiro permanecer o timeout anterior, options(timeout= 4000000)
all_mun_ms &amp;lt;- read_municipality(code_muni=50, year=2010)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Using data from year 2010&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Juntarei os datasets pela condição de que o &lt;code&gt;code_muni&lt;/code&gt; do objeto &lt;code&gt;all_mun_ms&lt;/code&gt; é igual ao &lt;code&gt;Codmun7&lt;/code&gt; do objeto &lt;code&gt;dados_ms&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dataset_final = left_join(all_mun_ms, dados_ms, by=c(&amp;quot;code_muni&amp;quot;=&amp;quot;Codmun7&amp;quot;))
max(dataset_final$IDHM) # 0.784&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.784&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;min(dataset_final$IDHM) # 0.526&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.526&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() +
  geom_sf(data=dataset_final, aes(fill=IDHM), color= NA, size=.15)+
  labs(title=&amp;quot;IDHM 2013 (ano base 2010) dos Municipíos de MS&amp;quot;,
       caption=&amp;#39;Fonte: Elaboração própria&amp;#39;, size=8)+
  scale_fill_distiller(palette = &amp;quot;Greens&amp;quot;, limits=c(0.5, 0.8),
                       name=&amp;quot;Code_muni&amp;quot;)+
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-01-31-mapas-em-r-com-geobr_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Sendo um mapa feito em &lt;code&gt;ggplot2&lt;/code&gt; pelos comandos &lt;code&gt;ggplot() +   geom_sf(data=dataset_final, aes(fill=IDHM), color= NA, size=.15)&lt;/code&gt;, o padrão é um mapa na escala azul. Ou seja, fazendo agora um mapa para o IDHM_E (IDHM Educação), recomendo o usuário fazer o passo a passo de modo a ver exatamente o que o código realiza:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#dataset_final = left_join(all_mun_ms, dados_ms, by=c(&amp;quot;code_muni&amp;quot;=&amp;quot;Codmun7&amp;quot;))
max(dataset_final$IDHM_E) # 0.724&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.724&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;min(dataset_final$IDHM_E) # 0.337&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.337&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() +
  geom_sf(data=dataset_final, aes(fill=IDHM_E), color= NA, size=.15)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-01-31-mapas-em-r-com-geobr_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Veja que o mapa anterior saiu em azul, sem rótulos. Observe que nesse caso e no próximo, não fiz nenhuma restrição à legenda.&lt;/p&gt;
&lt;p&gt;O próximo sai com rótulos do título e nota ao final do mapa.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() +
  geom_sf(data=dataset_final, aes(fill=IDHM_E), color= NA, size=.15)+
  labs(title=&amp;quot;IDHM Educação 2013 (ano base 2010) dos Municipíos de MS&amp;quot;,
       caption=&amp;#39;Fonte: Elaboração própria&amp;#39;, size=8)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-01-31-mapas-em-r-com-geobr_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Para o próximo mapa, coloco a palheta de cores em vermelho e os limites para as classes, agora de 0 a 1.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() +
  geom_sf(data=dataset_final, aes(fill=IDHM_E), color= NA, size=.15)+
  labs(title=&amp;quot;IDHM Educação 2013 (ano base 2010) dos Municipíos de MS&amp;quot;,
       caption=&amp;#39;Fonte: Elaboração própria&amp;#39;, size=8)+
  scale_fill_distiller(palette = &amp;quot;Reds&amp;quot;, limits=c(0.0, 1.0),
                       name=&amp;quot;Code_muni&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-01-31-mapas-em-r-com-geobr_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;No exemplo abaixo faço um caso particular em que um município, o de máximo IDHM_E ficou excluído por uma restrição ao delimitar o máximo da palheta em 0.7 (o valor seria de Campo Grande, 0.724, maior que 0.7). Portanto, o município ficou em preto.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() +
  geom_sf(data=dataset_final, aes(fill=IDHM_E), color= NA, size=.15)+
  labs(title=&amp;quot;IDHM Educação 2013 (ano base 2010) dos Municipíos de MS&amp;quot;,
       caption=&amp;#39;Fonte: Elaboração própria&amp;#39;, size=8)+
  scale_fill_distiller(limits=c(0.3, 0.7))+
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-01-31-mapas-em-r-com-geobr_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Outras palhetas de cores pode ser visualizada em &lt;a href=&#34;http://www.sthda.com/english/wiki/ggplot2-colors-how-to-change-colors-automatically-and-manually&#34; class=&#34;uri&#34;&gt;http://www.sthda.com/english/wiki/ggplot2-colors-how-to-change-colors-automatically-and-manually&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# dataset_final = left_join(all_mun_ms, dados_ms, by=c(&amp;quot;code_muni&amp;quot;=&amp;quot;Codmun7&amp;quot;))
# max(dataset_final$IDHM) # 0.784
# min(dataset_final$IDHM) # 0.526
ggplot() +
  geom_sf(data=dataset_final, aes(fill=IDHM), color= NA, size=.15)+
  labs(title=&amp;quot;IDHM 2013 (ano base 2010) dos Municipíos de MS&amp;quot;,
       caption=&amp;#39;Fonte: Elaboração própria&amp;#39;, size=8)+
  scale_fill_distiller(palette = &amp;quot;RdGy&amp;quot;, limits=c(0.5, 0.8),
                       name=&amp;quot;Code_muni&amp;quot;)+
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-01-31-mapas-em-r-com-geobr_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;Referências&#34; class=&#34;section level1 unnumbered&#34;&gt;
&lt;h1&gt;Referências&lt;/h1&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Aplicativo Shiny experimental para as populações dos principais aglomerados urbanos do mundo</title>
      <link>/post/aplicativo-shiny-experimental-para-as-populacoes-dos-principais-aglomerados-urbanos-do-mundo/</link>
      <pubDate>Wed, 29 Jan 2020 00:00:00 +0000</pubDate>
      <guid>/post/aplicativo-shiny-experimental-para-as-populacoes-dos-principais-aglomerados-urbanos-do-mundo/</guid>
      <description>


&lt;div id=&#34;Licença&#34; class=&#34;section level1 unnumbered&#34;&gt;
&lt;h1&gt;Licença&lt;/h1&gt;
&lt;p&gt;This work is licensed under the Creative Commons Attribution-ShareAlike 4.0 International License. To view a copy of this license, visit &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34; class=&#34;uri&#34;&gt;http://creativecommons.org/licenses/by-sa/4.0/&lt;/a&gt; or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://mirrors.creativecommons.org/presskit/buttons/88x31/png/by-sa.png&#34; alt=&#34;License: CC BY-SA 4.0&#34; style=&#34;width:25.0%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;License: CC BY-SA 4.0&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;informe&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Informe&lt;/h1&gt;
&lt;p&gt;Prezados leitores.&lt;/p&gt;
&lt;p&gt;Iniciei a jornada de fazer um aplicativo web com o &lt;code&gt;Shiny&lt;/code&gt; para o RStudio. Adaptei a instrução de Angela Li (2019), disponível em: &lt;a href=&#34;https://spatialanalysis.github.io/workshop-notes/interactive-maps-with-shiny.html&#34; class=&#34;uri&#34;&gt;https://spatialanalysis.github.io/workshop-notes/interactive-maps-with-shiny.html&lt;/a&gt; e fui alterando ao idioma português e algumas alterações de formato.&lt;/p&gt;
&lt;p&gt;É, portanto, apenas um exemplo básico de Shiny para estudos e aperfeiçoamentos posteriores. Fiquem a vontade para criticá-lo.&lt;/p&gt;
&lt;p&gt;O aplicativo está acessível em: &lt;a href=&#34;https://amrofi.shinyapps.io/shiny_workshop/&#34; class=&#34;uri&#34;&gt;https://amrofi.shinyapps.io/shiny_workshop/&lt;/a&gt; e o código está reproduzido abaixo.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;códigoscript&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Código/Script&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;#
# This is a Shiny web application. You can run the application by clicking
# the &amp;#39;Run App&amp;#39; button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
# https://spatialanalysis.github.io/workshop-notes/interactive-maps-with-shiny.html

library(shiny)
library(leaflet)
library(spData)
library(dplyr)
library(magick)
library(sf)

# Definir UI para aplicativo que filtra os pontos do mapa baseado no ano e
# população mínima
ui &amp;lt;- fluidPage(
   
   # Titulo do Aplicativo
   titlePanel(&amp;quot;População das Aglomerações Urbanas no Mundo ao longo dos anos&amp;quot;),
   
   # Barra lateral com insumo deslizante por ano, insumo numérico para população 
   sidebarLayout(
      sidebarPanel(
         h5(&amp;quot;Aplicativo Shiny adaptado de Angela Li, 2019, disponível em: &amp;quot;),
         a(&amp;quot;&amp;lt;https://spatialanalysis.github.io/workshop-notes/interactive-maps-with-shiny.html&amp;gt;&amp;quot;, style = &amp;quot;color:blue&amp;quot;),
         p(&amp;quot;&amp;quot;),
         strong(&amp;quot;Adaptado por Prof. Adriano Marcos Rodrigues Figueiredo&amp;quot;),
         p(&amp;quot;E-mail: adriano.figueiredo@ufms.br&amp;quot;, style = &amp;quot;color:blue&amp;quot;),
         strong(&amp;quot;Licença Creative Commons - License: CC BY-SA 4.0&amp;quot;, style = &amp;quot;color:brown&amp;quot;),
         h5(&amp;quot;This work is licensed under the Creative Commons Attribution-ShareAlike 4.0 International License.     
            To view a copy of this license, visit&amp;quot;), 
         a(&amp;quot;&amp;lt;http://creativecommons.org/licenses/by-sa/4.0/&amp;gt;&amp;quot;), 
         h5(&amp;quot;or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.&amp;quot;),
         img(src =&amp;quot;https://i.creativecommons.org/l/by-sa/4.0/88x31.png&amp;quot;),
         sliderInput(&amp;quot;year&amp;quot;,
                     &amp;quot;Ano&amp;quot;,
                     min = 1950,
                     max = 2030,
                     step = 5,
                     sep = &amp;quot;&amp;quot;,
                     value = 1950),
         
         sliderInput(&amp;quot;pop_min&amp;quot;,
                      &amp;quot;População Mínima da Aglomeração Urbana (em milhões)&amp;quot;,
                      min = 1,
                      max = 40,
                      value = 10)
      ),
      
      # Mostra o mapa e tabela
      mainPanel(
         # plotOutput(&amp;quot;distPlot&amp;quot;),
         leafletOutput(&amp;quot;map&amp;quot;),
         dataTableOutput(&amp;quot;table&amp;quot;)
      )
   )
)

# Define a logica do server requerido para desenhar o mapa e tabela
server &amp;lt;- function(input, output) {

   
   output$map &amp;lt;- renderLeaflet({
      # urban_agglomerations{spData} é o meu dataset no exemplo
     pop_by_year &amp;lt;- filter(urban_agglomerations, 
                           year == input$year,
                           population_millions &amp;gt; input$pop_min)
     
     leaflet(data = pop_by_year) %&amp;gt;%
       addTiles() %&amp;gt;%
       addMarkers()
   })
   
   output$table &amp;lt;- renderDataTable({
     # urban_agglomerations{spData} é o meu dataset no exemplo
     pop_by_year &amp;lt;- filter(urban_agglomerations, 
                           year == input$year,
                           population_millions &amp;gt; input$pop_min)
     
     pop_by_year
     
   })
}

# Run the application 
shinyApp(ui = ui, server = server)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
